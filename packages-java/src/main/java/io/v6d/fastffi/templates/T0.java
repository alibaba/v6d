package io.v6d.fastffi.templates;

import com.alibaba.fastffi.CXXHead;
import com.alibaba.fastffi.CXXTemplate;
import com.alibaba.fastffi.FFIGen;
import com.alibaba.fastffi.FFIGenBatch;

@FFIGenBatch({
    @FFIGen(type = "io.v6d.vineyard.NumericArrayBuilder", templates = {@CXXTemplate(cxx = "short", java = "io.v6d.std.CShort", include = @CXXHead(system = "sys/_types/_int16_t.h")), @CXXTemplate(cxx = "float", java = "io.v6d.std.CFloat"), @CXXTemplate(cxx = "long long", java = "io.v6d.std.CLongLong", include = @CXXHead(system = "sys/_types/_int64_t.h")), @CXXTemplate(cxx = "int", java = "io.v6d.std.CInt", include = @CXXHead(system = "sys/_types/_int32_t.h")), @CXXTemplate(cxx = "unsigned long long", java = "io.v6d.std.CUnsignedLongLong", include = @CXXHead(system = "_types/_uint64_t.h")), @CXXTemplate(cxx = "unsigned int", java = "io.v6d.std.CUnsignedInt", include = @CXXHead(system = "_types/_uint32_t.h")), @CXXTemplate(cxx = "double", java = "io.v6d.std.CDouble"), @CXXTemplate(cxx = "unsigned short", java = "io.v6d.std.CUnsignedShort", include = @CXXHead(system = "_types/_uint16_t.h")), @CXXTemplate(cxx = "signed char", java = "io.v6d.std.CSignedChar", include = @CXXHead(system = "sys/_types/_int8_t.h")), @CXXTemplate(cxx = "unsigned char", java = "io.v6d.std.CUnsignedChar", include = @CXXHead(system = "_types/_uint8_t.h"))}),
    @FFIGen(type = "io.v6d.std.initializer_list", templates = {@CXXTemplate(cxx = "std::vector<std::shared_ptr<arrow::Field>, std::allocator<std::shared_ptr<arrow::Field>>>::value_type", java = "io.v6d.std.impl.vector.ValueTypeStdSharedPtrArrowFieldStdAllocatorStdSharedPtrArrowField", include = @CXXHead(system = "vector")), @CXXTemplate(cxx = "std::vector<std::shared_ptr<arrow::RecordBatch>, std::allocator<std::shared_ptr<arrow::RecordBatch>>>::value_type", java = "io.v6d.std.impl.vector.ValueTypeStdSharedPtrArrowRecordBatchStdAllocatorStdSharedPtrArrowRecordBatch", include = @CXXHead(system = "vector")), @CXXTemplate(cxx = "std::vector<std::shared_ptr<arrow::Array>, std::allocator<std::shared_ptr<arrow::Array>>>::value_type", java = "io.v6d.std.impl.vector.ValueTypeStdSharedPtrArrowArrayStdAllocatorStdSharedPtrArrowArray", include = @CXXHead(system = "vector")), @CXXTemplate(cxx = "char", java = "io.v6d.std.CChar", include = @CXXHead(system = "string")), @CXXTemplate(cxx = "char", java = "io.v6d.std.CChar"), @CXXTemplate(cxx = "std::vector<std::shared_ptr<arrow::Scalar>, std::allocator<std::shared_ptr<arrow::Scalar>>>::value_type", java = "io.v6d.std.impl.vector.ValueTypeStdSharedPtrArrowScalarStdAllocatorStdSharedPtrArrowScalar", include = @CXXHead(system = "vector"))}),
    @FFIGen(type = "io.v6d.arrow.NumericBuilder", templates = {@CXXTemplate(cxx = "arrow::TimestampType", java = "io.v6d.arrow.TimestampType", include = @CXXHead(system = "arrow/type.h")), @CXXTemplate(cxx = "arrow::DoubleType", java = "io.v6d.arrow.DoubleType", include = @CXXHead(system = "arrow/type.h")), @CXXTemplate(cxx = "arrow::FloatType", java = "io.v6d.arrow.FloatType", include = @CXXHead(system = "arrow/type.h")), @CXXTemplate(cxx = "arrow::UInt64Type", java = "io.v6d.arrow.UInt64Type", include = @CXXHead(system = "arrow/type.h")), @CXXTemplate(cxx = "arrow::Int64Type", java = "io.v6d.arrow.Int64Type", include = @CXXHead(system = "arrow/type.h")), @CXXTemplate(cxx = "arrow::UInt8Type", java = "io.v6d.arrow.UInt8Type", include = @CXXHead(system = "arrow/type.h")), @CXXTemplate(cxx = "arrow::Date32Type", java = "io.v6d.arrow.Date32Type", include = @CXXHead(system = "arrow/type.h")), @CXXTemplate(cxx = "arrow::UInt32Type", java = "io.v6d.arrow.UInt32Type", include = @CXXHead(system = "arrow/type.h")), @CXXTemplate(cxx = "arrow::Int8Type", java = "io.v6d.arrow.Int8Type", include = @CXXHead(system = "arrow/type.h")), @CXXTemplate(cxx = "arrow::Int32Type", java = "io.v6d.arrow.Int32Type", include = @CXXHead(system = "arrow/type.h")), @CXXTemplate(cxx = "arrow::Date64Type", java = "io.v6d.arrow.Date64Type", include = @CXXHead(system = "arrow/type.h")), @CXXTemplate(cxx = "arrow::Int16Type", java = "io.v6d.arrow.Int16Type", include = @CXXHead(system = "arrow/type.h")), @CXXTemplate(cxx = "arrow::UInt16Type", java = "io.v6d.arrow.UInt16Type", include = @CXXHead(system = "arrow/type.h"))}),
    @FFIGen(type = "io.v6d.vineyard.IdTypeEnum", templates = {@CXXTemplate(cxx = "unsigned long long", java = "io.v6d.std.CUnsignedLongLong"), @CXXTemplate(cxx = "int", java = "io.v6d.std.CInt"), @CXXTemplate(cxx = "long long", java = "io.v6d.std.CLongLong"), @CXXTemplate(cxx = "unsigned int", java = "io.v6d.std.CUnsignedInt"), @CXXTemplate(cxx = "arrow::Date64Type", java = "io.v6d.arrow.Date64Type", include = @CXXHead(system = "arrow/type.h")), @CXXTemplate(cxx = "arrow::Date32Type", java = "io.v6d.arrow.Date32Type", include = @CXXHead(system = "arrow/type.h"))}),
    @FFIGen(type = "io.v6d.vineyard.Registered", templates = {@CXXTemplate(cxx = "vineyard::GlobalTensor", java = "io.v6d.vineyard.GlobalTensor", include = @CXXHead("basic/ds/tensor.h")), @CXXTemplate(cxx = "vineyard::SchemaProxy", java = "io.v6d.vineyard.SchemaProxy", include = @CXXHead("basic/ds/arrow.vineyard.h")), @CXXTemplate(cxx = "vineyard::RecordBatch", java = "io.v6d.vineyard.RecordBatch", include = @CXXHead("basic/ds/arrow.vineyard.h")), @CXXTemplate(cxx = "vineyard::NullArray", java = "io.v6d.vineyard.NullArray", include = @CXXHead("basic/ds/arrow.vineyard.h")), @CXXTemplate(cxx = "vineyard::Sequence", java = "io.v6d.vineyard.Sequence", include = @CXXHead("basic/ds/sequence.vineyard.h")), @CXXTemplate(cxx = "vineyard::FixedSizeBinaryArray", java = "io.v6d.vineyard.FixedSizeBinaryArray", include = @CXXHead("basic/ds/arrow.vineyard.h")), @CXXTemplate(cxx = "vineyard::BooleanArray", java = "io.v6d.vineyard.BooleanArray", include = @CXXHead("basic/ds/arrow.vineyard.h")), @CXXTemplate(cxx = "vineyard::DataFrame", java = "io.v6d.vineyard.DataFrame", include = @CXXHead("basic/ds/dataframe.vineyard.h")), @CXXTemplate(cxx = "vineyard::GlobalDataFrame", java = "io.v6d.vineyard.GlobalDataFrame", include = @CXXHead("basic/ds/dataframe.h")), @CXXTemplate(cxx = "vineyard::Table", java = "io.v6d.vineyard.Table", include = @CXXHead("basic/ds/arrow.vineyard.h"))}),
    @FFIGen(type = "io.v6d.vineyard.BaseListArray", templates = {@CXXTemplate(cxx = "arrow::ListArray", java = "io.v6d.arrow.ListArray", include = @CXXHead(system = "arrow/array/array_nested.h")), @CXXTemplate(cxx = "arrow::LargeListArray", java = "io.v6d.arrow.LargeListArray", include = @CXXHead(system = "arrow/array/array_nested.h"))}),
    @FFIGen(type = "io.v6d.std.set", templates = @CXXTemplate(cxx = "unsigned long long", java = "io.v6d.std.CUnsignedLongLong", include = @CXXHead("common/util/uuid.h"))),
    @FFIGen(type = "io.v6d.vineyard.Stream", templates = {@CXXTemplate(cxx = "vineyard::RecordBatch", java = "io.v6d.vineyard.RecordBatch", include = @CXXHead("basic/ds/arrow.vineyard.h")), @CXXTemplate(cxx = "vineyard::DataFrame", java = "io.v6d.vineyard.DataFrame", include = @CXXHead("basic/ds/dataframe.vineyard.h"))}),
    @FFIGen(type = "io.v6d.arrow.util.ToStringOstreamable", templates = {@CXXTemplate(cxx = "arrow::Schema", java = "io.v6d.arrow.Schema", include = @CXXHead(system = "arrow/type.h")), @CXXTemplate(cxx = "arrow::Status", java = "io.v6d.arrow.Status", include = @CXXHead(system = "arrow/status.h"))}),
    @FFIGen(type = "io.v6d.std.atomic", templates = @CXXTemplate(cxx = "long long", java = "io.v6d.std.CLongLong", include = @CXXHead(system = "sys/_types/_int64_t.h"))),
    @FFIGen(type = "io.v6d.std.basic_ostream", templates = @CXXTemplate(cxx = "char", java = "io.v6d.std.CChar")),
    @FFIGen(type = "io.v6d.arrow.BaseListArray", templates = {@CXXTemplate(cxx = "arrow::LargeListType", java = "io.v6d.arrow.LargeListType", include = @CXXHead(system = "arrow/type.h")), @CXXTemplate(cxx = "arrow::ListType", java = "io.v6d.arrow.ListType", include = @CXXHead(system = "arrow/type.h"))}),
    @FFIGen(type = "io.v6d.arrow.BaseBinaryArray", templates = {@CXXTemplate(cxx = "arrow::BinaryType", java = "io.v6d.arrow.BinaryType", include = @CXXHead(system = "arrow/type.h")), @CXXTemplate(cxx = "arrow::LargeBinaryType", java = "io.v6d.arrow.LargeBinaryType", include = @CXXHead(system = "arrow/type.h"))}),
    @FFIGen(type = "io.v6d.vineyard.ConvertToArrowType", templates = {@CXXTemplate(cxx = "arrow::TimestampType", java = "io.v6d.arrow.TimestampType", include = @CXXHead(system = "arrow/type.h")), @CXXTemplate(cxx = "unsigned short", java = "io.v6d.std.CUnsignedShort"), @CXXTemplate(cxx = "double", java = "io.v6d.std.CDouble"), @CXXTemplate(cxx = "arrow::Date32Type", java = "io.v6d.arrow.Date32Type", include = @CXXHead(system = "arrow/type.h")), @CXXTemplate(cxx = "long long", java = "io.v6d.std.CLongLong"), @CXXTemplate(cxx = "float", java = "io.v6d.std.CFloat"), @CXXTemplate(cxx = "signed char", java = "io.v6d.std.CSignedChar"), @CXXTemplate(cxx = "short", java = "io.v6d.std.CShort"), @CXXTemplate(cxx = "unsigned int", java = "io.v6d.std.CUnsignedInt"), @CXXTemplate(cxx = "unsigned long long", java = "io.v6d.std.CUnsignedLongLong"), @CXXTemplate(cxx = "bool", java = "io.v6d.std.CBool"), @CXXTemplate(cxx = "unsigned char", java = "io.v6d.std.CUnsignedChar"), @CXXTemplate(cxx = "arrow::Date64Type", java = "io.v6d.arrow.Date64Type", include = @CXXHead(system = "arrow/type.h")), @CXXTemplate(cxx = "int", java = "io.v6d.std.CInt")}),
    @FFIGen(type = "io.v6d.arrow.NumericArray", templates = {@CXXTemplate(cxx = "arrow::Int32Type", java = "io.v6d.arrow.Int32Type"), @CXXTemplate(cxx = "arrow::Int16Type", java = "io.v6d.arrow.Int16Type"), @CXXTemplate(cxx = "arrow::UInt64Type", java = "io.v6d.arrow.UInt64Type", include = @CXXHead(system = "arrow/type.h")), @CXXTemplate(cxx = "arrow::HalfFloatType", java = "io.v6d.arrow.HalfFloatType", include = @CXXHead(system = "arrow/type.h")), @CXXTemplate(cxx = "arrow::TimestampType", java = "io.v6d.arrow.TimestampType", include = @CXXHead(system = "arrow/type.h")), @CXXTemplate(cxx = "arrow::Int8Type", java = "io.v6d.arrow.Int8Type", include = @CXXHead(system = "arrow/type.h")), @CXXTemplate(cxx = "arrow::Time64Type", java = "io.v6d.arrow.Time64Type", include = @CXXHead(system = "arrow/type.h")), @CXXTemplate(cxx = "arrow::Date32Type", java = "io.v6d.arrow.Date32Type", include = @CXXHead(system = "arrow/type.h")), @CXXTemplate(cxx = "arrow::Date64Type", java = "io.v6d.arrow.Date64Type", include = @CXXHead(system = "arrow/type.h")), @CXXTemplate(cxx = "arrow::FloatType", java = "io.v6d.arrow.FloatType", include = @CXXHead(system = "arrow/type.h")), @CXXTemplate(cxx = "arrow::Int64Type", java = "io.v6d.arrow.Int64Type"), @CXXTemplate(cxx = "arrow::UInt16Type", java = "io.v6d.arrow.UInt16Type"), @CXXTemplate(cxx = "arrow::DurationType", java = "io.v6d.arrow.DurationType", include = @CXXHead(system = "arrow/type.h")), @CXXTemplate(cxx = "arrow::UInt8Type", java = "io.v6d.arrow.UInt8Type", include = @CXXHead(system = "arrow/type.h")), @CXXTemplate(cxx = "arrow::UInt32Type", java = "io.v6d.arrow.UInt32Type"), @CXXTemplate(cxx = "arrow::MonthIntervalType", java = "io.v6d.arrow.MonthIntervalType", include = @CXXHead(system = "arrow/type.h")), @CXXTemplate(cxx = "arrow::Time32Type", java = "io.v6d.arrow.Time32Type", include = @CXXHead(system = "arrow/type.h")), @CXXTemplate(cxx = "arrow::DoubleType", java = "io.v6d.arrow.DoubleType", include = @CXXHead(system = "arrow/type.h"))}),
    @FFIGen(type = "io.v6d.vineyard.AnyTypeEnum", templates = {@CXXTemplate(cxx = "double", java = "io.v6d.std.CDouble"), @CXXTemplate(cxx = "unsigned long long", java = "io.v6d.std.CUnsignedLongLong"), @CXXTemplate(cxx = "arrow::Date64Type", java = "io.v6d.arrow.Date64Type", include = @CXXHead(system = "arrow/type.h")), @CXXTemplate(cxx = "float", java = "io.v6d.std.CFloat"), @CXXTemplate(cxx = "int", java = "io.v6d.std.CInt"), @CXXTemplate(cxx = "arrow::Date32Type", java = "io.v6d.arrow.Date32Type", include = @CXXHead(system = "arrow/type.h")), @CXXTemplate(cxx = "unsigned int", java = "io.v6d.std.CUnsignedInt"), @CXXTemplate(cxx = "long long", java = "io.v6d.std.CLongLong")}),
    @FFIGen(type = "io.v6d.std.vector", templates = {@CXXTemplate(cxx = "arrow::NumericBuilder<arrow::Int32Type>::value_type", java = "io.v6d.arrow.impl.numericbuilder.ValueTypeArrowInt32Type", include = @CXXHead(system = "arrow/array/builder_primitive.h")), @CXXTemplate(cxx = "arrow::NumericBuilder<arrow::FloatType>::value_type", java = "io.v6d.arrow.impl.numericbuilder.ValueTypeArrowFloatType", include = @CXXHead(system = "arrow/array/builder_primitive.h")), @CXXTemplate(cxx = "arrow::NumericBuilder<arrow::DoubleType>::value_type", java = "io.v6d.arrow.impl.numericbuilder.ValueTypeArrowDoubleType", include = @CXXHead(system = "arrow/array/builder_primitive.h")), @CXXTemplate(cxx = "bool", java = "io.v6d.std.CBool"), @CXXTemplate(cxx = "long long", java = "io.v6d.std.CLongLong", include = @CXXHead(system = "sys/_types/_int64_t.h")), @CXXTemplate(cxx = "arrow::NumericBuilder<arrow::Date32Type>::value_type", java = "io.v6d.arrow.impl.numericbuilder.ValueTypeArrowDate32Type", include = @CXXHead(system = "arrow/array/builder_primitive.h")), @CXXTemplate(cxx = "unsigned long", java = "io.v6d.std.CUnsignedLong", include = @CXXHead(system = "stddef.h")), @CXXTemplate(cxx = "arrow::NumericBuilder<arrow::UInt8Type>::value_type", java = "io.v6d.arrow.impl.numericbuilder.ValueTypeArrowUInt8Type", include = @CXXHead(system = "arrow/array/builder_primitive.h")), @CXXTemplate(cxx = "arrow::TimeUnit::type", java = "io.v6d.arrow.TimeUnit.type", include = @CXXHead(system = "arrow/type_fwd.h")), @CXXTemplate(cxx = "unsigned long long", java = "io.v6d.std.CUnsignedLongLong", include = @CXXHead("common/util/uuid.h")), @CXXTemplate(cxx = "std::string", java = "io.v6d.std.string", include = {@CXXHead(system = "iosfwd"), @CXXHead(system = "string")}), @CXXTemplate(cxx = "std::shared_ptr<arrow::Field>", java = "io.v6d.std.shared_ptr<io.v6d.arrow.Field>", include = {@CXXHead(system = "arrow/type.h"), @CXXHead(system = "__memory/shared_ptr.h"), @CXXHead(system = "memory")}), @CXXTemplate(cxx = "std::shared_ptr<vineyard::ITensor>", java = "io.v6d.std.shared_ptr<io.v6d.vineyard.ITensor>", include = {@CXXHead("basic/ds/tensor.vineyard.h"), @CXXHead(system = "__memory/shared_ptr.h"), @CXXHead(system = "memory")}), @CXXTemplate(cxx = "arrow::NumericBuilder<arrow::Int8Type>::value_type", java = "io.v6d.arrow.impl.numericbuilder.ValueTypeArrowInt8Type", include = @CXXHead(system = "arrow/array/builder_primitive.h")), @CXXTemplate(cxx = "arrow::NumericBuilder<arrow::Int16Type>::value_type", java = "io.v6d.arrow.impl.numericbuilder.ValueTypeArrowInt16Type", include = @CXXHead(system = "arrow/array/builder_primitive.h")), @CXXTemplate(cxx = "std::shared_ptr<arrow::ArrayData>", java = "io.v6d.std.shared_ptr<io.v6d.arrow.ArrayData>", include = {@CXXHead(system = "arrow/array/data.h"), @CXXHead(system = "__memory/shared_ptr.h"), @CXXHead(system = "memory"), @CXXHead("arrow/type.h")}), @CXXTemplate(cxx = "arrow::NumericBuilder<arrow::UInt32Type>::value_type", java = "io.v6d.arrow.impl.numericbuilder.ValueTypeArrowUInt32Type", include = @CXXHead(system = "arrow/array/builder_primitive.h")), @CXXTemplate(cxx = "arrow::io::ReadRange", java = "io.v6d.arrow.io.ReadRange", include = @CXXHead(system = "arrow/io/interfaces.h")), @CXXTemplate(cxx = "std::shared_ptr<vineyard::DataFrame>", java = "io.v6d.std.shared_ptr<io.v6d.vineyard.DataFrame>", include = {@CXXHead("basic/ds/dataframe.vineyard.h"), @CXXHead(system = "__memory/shared_ptr.h"), @CXXHead(system = "memory")}), @CXXTemplate(cxx = "std::shared_ptr<arrow::ChunkedArray>", java = "io.v6d.std.shared_ptr<io.v6d.arrow.ChunkedArray>", include = {@CXXHead(system = "arrow/chunked_array.h"), @CXXHead(system = "__memory/shared_ptr.h"), @CXXHead(system = "memory")}), @CXXTemplate(cxx = "std::shared_ptr<arrow::Array>", java = "io.v6d.std.shared_ptr<io.v6d.arrow.Array>", include = {@CXXHead(system = "arrow/array/array_base.h"), @CXXHead(system = "__memory/shared_ptr.h"), @CXXHead(system = "memory")}), @CXXTemplate(cxx = "std::shared_ptr<arrow::Buffer>", java = "io.v6d.std.shared_ptr<io.v6d.arrow.Buffer>", include = {@CXXHead(system = "arrow/buffer.h"), @CXXHead(system = "__memory/shared_ptr.h"), @CXXHead(system = "memory"), @CXXHead("arrow/status.h")}), @CXXTemplate(cxx = "std::shared_ptr<vineyard::RecordBatch>", java = "io.v6d.std.shared_ptr<io.v6d.vineyard.RecordBatch>", include = {@CXXHead(system = "__memory/shared_ptr.h"), @CXXHead("basic/ds/arrow.vineyard.h"), @CXXHead(system = "memory")}), @CXXTemplate(cxx = "unsigned char", java = "io.v6d.std.CUnsignedChar", include = @CXXHead(system = "_types/_uint8_t.h")), @CXXTemplate(cxx = "signed char", java = "io.v6d.std.CSignedChar", include = @CXXHead(system = "arrow/array/array_nested.h")), @CXXTemplate(cxx = "std::shared_ptr<arrow::RecordBatch>", java = "io.v6d.std.shared_ptr<io.v6d.arrow.RecordBatch>", include = {@CXXHead(system = "arrow/record_batch.h"), @CXXHead(system = "__memory/shared_ptr.h"), @CXXHead(system = "memory"), @CXXHead("arrow/array/array_nested.h")}), @CXXTemplate(cxx = "arrow::NumericBuilder<arrow::Int64Type>::value_type", java = "io.v6d.arrow.impl.numericbuilder.ValueTypeArrowInt64Type", include = @CXXHead(system = "arrow/array/builder_primitive.h")), @CXXTemplate(cxx = "signed char", java = "io.v6d.std.CSignedChar", include = @CXXHead(system = "sys/_types/_int8_t.h")), @CXXTemplate(cxx = "arrow::NumericBuilder<arrow::UInt16Type>::value_type", java = "io.v6d.arrow.impl.numericbuilder.ValueTypeArrowUInt16Type", include = @CXXHead(system = "arrow/array/builder_primitive.h")), @CXXTemplate(cxx = "arrow::NumericBuilder<arrow::UInt64Type>::value_type", java = "io.v6d.arrow.impl.numericbuilder.ValueTypeArrowUInt64Type", include = @CXXHead(system = "arrow/array/builder_primitive.h")), @CXXTemplate(cxx = "unsigned long long", java = "io.v6d.std.CUnsignedLongLong", include = @CXXHead("common/util/uuid.h")), @CXXTemplate(cxx = "std::shared_ptr<vineyard::Object>", java = "io.v6d.std.shared_ptr<io.v6d.vineyard.Object>", include = {@CXXHead("client/ds/i_object.h"), @CXXHead(system = "__memory/shared_ptr.h"), @CXXHead(system = "memory")}), @CXXTemplate(cxx = "vineyard::ObjectMeta", java = "io.v6d.vineyard.ObjectMeta", include = @CXXHead("client/ds/object_meta.h")), @CXXTemplate(cxx = "arrow::NumericBuilder<arrow::Date64Type>::value_type", java = "io.v6d.arrow.impl.numericbuilder.ValueTypeArrowDate64Type", include = @CXXHead(system = "arrow/array/builder_primitive.h")), @CXXTemplate(cxx = "std::pair<std::string,std::string>", java = "io.v6d.std.pair<io.v6d.std.string, io.v6d.std.string>", include = {@CXXHead(system = "iosfwd"), @CXXHead(system = "__utility/pair.h"), @CXXHead(system = "string"), @CXXHead(system = "string")}), @CXXTemplate(cxx = "int", java = "io.v6d.std.CInt"), @CXXTemplate(cxx = "arrow::NumericBuilder<arrow::TimestampType>::value_type", java = "io.v6d.arrow.impl.numericbuilder.ValueTypeArrowTimestampType", include = @CXXHead(system = "arrow/array/builder_primitive.h")), @CXXTemplate(cxx = "std::shared_ptr<arrow::Scalar>", java = "io.v6d.std.shared_ptr<io.v6d.arrow.Scalar>", include = {@CXXHead(system = "arrow/scalar.h"), @CXXHead(system = "__memory/shared_ptr.h"), @CXXHead(system = "memory")}), @CXXTemplate(cxx = "arrow::DataTypeLayout::BufferSpec", java = "io.v6d.arrow.DataTypeLayout.BufferSpec", include = @CXXHead(system = "arrow/type.h"))}),
    @FFIGen(type = "io.v6d.std.unique_ptr", templates = {@CXXTemplate(cxx = "vineyard::ObjectMeta", java = "io.v6d.vineyard.ObjectMeta", include = @CXXHead("client/ds/object_meta.h")), @CXXTemplate(cxx = "arrow::MemoryPool", java = "io.v6d.arrow.MemoryPool", include = @CXXHead(system = "arrow/memory_pool.h")), @CXXTemplate(cxx = "vineyard::Object", java = "io.v6d.vineyard.Object", include = @CXXHead("client/ds/i_object.h")), @CXXTemplate(cxx = "arrow::MutableBuffer", java = "io.v6d.arrow.MutableBuffer", include = @CXXHead(system = "arrow/buffer.h")), @CXXTemplate(cxx = "arrow::Buffer", java = "io.v6d.arrow.Buffer", include = {@CXXHead(system = "arrow/buffer.h"), @CXXHead("arrow/status.h")}), @CXXTemplate(cxx = "vineyard::BlobWriter", java = "io.v6d.vineyard.BlobWriter", include = @CXXHead("client/ds/blob.h"))}),
    @FFIGen(type = "io.v6d.std.enable_shared_from_this", templates = {@CXXTemplate(cxx = "arrow::io::InputStream", java = "io.v6d.arrow.io.InputStream", include = {@CXXHead(system = "arrow/io/interfaces.h"), @CXXHead("arrow/status.h"), @CXXHead("arrow/result.h")}), @CXXTemplate(cxx = "arrow::MemoryManager", java = "io.v6d.arrow.MemoryManager", include = {@CXXHead(system = "arrow/device.h"), @CXXHead("arrow/result.h")}), @CXXTemplate(cxx = "arrow::Device", java = "io.v6d.arrow.Device", include = @CXXHead(system = "arrow/device.h")), @CXXTemplate(cxx = "vineyard::Object", java = "io.v6d.vineyard.Object", include = @CXXHead("client/ds/i_object.h"))}),
    @FFIGen(type = "io.v6d.arrow.util.EqualityComparable", templates = {@CXXTemplate(cxx = "arrow::Device", java = "io.v6d.arrow.Device", include = @CXXHead(system = "arrow/device.h")), @CXXTemplate(cxx = "arrow::Status", java = "io.v6d.arrow.Status", include = @CXXHead(system = "arrow/status.h")), @CXXTemplate(cxx = "arrow::Scalar", java = "io.v6d.arrow.Scalar", include = @CXXHead(system = "arrow/scalar.h")), @CXXTemplate(cxx = "arrow::Schema", java = "io.v6d.arrow.Schema", include = @CXXHead(system = "arrow/type.h"))}),
    @FFIGen(type = "io.v6d.arrow.Result", templates = {@CXXTemplate(cxx = "std::shared_ptr<arrow::Buffer>", java = "io.v6d.std.shared_ptr<io.v6d.arrow.Buffer>", include = {@CXXHead(system = "arrow/buffer.h"), @CXXHead(system = "__memory/shared_ptr.h"), @CXXHead(system = "memory"), @CXXHead("arrow/status.h")}), @CXXTemplate(cxx = "std::shared_ptr<arrow::ListArray>", java = "io.v6d.std.shared_ptr<io.v6d.arrow.ListArray>", include = {@CXXHead(system = "arrow/array/array_nested.h"), @CXXHead(system = "__memory/shared_ptr.h"), @CXXHead(system = "memory")}), @CXXTemplate(cxx = "std::shared_ptr<arrow::io::RandomAccessFile>", java = "io.v6d.std.shared_ptr<io.v6d.arrow.io.RandomAccessFile>", include = {@CXXHead(system = "arrow/io/interfaces.h"), @CXXHead(system = "__memory/shared_ptr.h"), @CXXHead(system = "memory")}), @CXXTemplate(cxx = "std::shared_ptr<arrow::ArrayData>", java = "io.v6d.std.shared_ptr<io.v6d.arrow.ArrayData>", include = {@CXXHead(system = "arrow/array/data.h"), @CXXHead(system = "__memory/shared_ptr.h"), @CXXHead(system = "memory"), @CXXHead("arrow/type.h")}), @CXXTemplate(cxx = "std::shared_ptr<arrow::Table>", java = "io.v6d.std.shared_ptr<io.v6d.arrow.Table>", include = {@CXXHead(system = "arrow/table.h"), @CXXHead(system = "__memory/shared_ptr.h"), @CXXHead(system = "memory")}), @CXXTemplate(cxx = "std::shared_ptr<arrow::DataType>", java = "io.v6d.std.shared_ptr<io.v6d.arrow.DataType>", include = {@CXXHead(system = "arrow/type.h"), @CXXHead(system = "__memory/shared_ptr.h"), @CXXHead(system = "memory")}), @CXXTemplate(cxx = "arrow::ArrayVector", java = "io.v6d.arrow.ArrayVector", include = @CXXHead(system = "arrow/type_fwd.h")), @CXXTemplate(cxx = "std::shared_ptr<arrow::Array>", java = "io.v6d.std.shared_ptr<io.v6d.arrow.Array>", include = {@CXXHead(system = "arrow/array/array_base.h"), @CXXHead(system = "__memory/shared_ptr.h"), @CXXHead(system = "memory")}), @CXXTemplate(cxx = "std::shared_ptr<arrow::KeyValueMetadata>", java = "io.v6d.std.shared_ptr<io.v6d.arrow.KeyValueMetadata>", include = {@CXXHead(system = "__memory/shared_ptr.h"), @CXXHead(system = "arrow/util/key_value_metadata.h"), @CXXHead(system = "memory")}), @CXXTemplate(cxx = "std::shared_ptr<arrow::Scalar>", java = "io.v6d.std.shared_ptr<io.v6d.arrow.Scalar>", include = {@CXXHead(system = "arrow/scalar.h"), @CXXHead(system = "__memory/shared_ptr.h"), @CXXHead(system = "memory")}), @CXXTemplate(cxx = "std::shared_ptr<arrow::io::OutputStream>", java = "io.v6d.std.shared_ptr<io.v6d.arrow.io.OutputStream>", include = {@CXXHead(system = "arrow/io/interfaces.h"), @CXXHead(system = "__memory/shared_ptr.h"), @CXXHead(system = "memory")}), @CXXTemplate(cxx = "std::shared_ptr<arrow::LargeListArray>", java = "io.v6d.std.shared_ptr<io.v6d.arrow.LargeListArray>", include = {@CXXHead(system = "arrow/array/array_nested.h"), @CXXHead(system = "__memory/shared_ptr.h"), @CXXHead(system = "memory")}), @CXXTemplate(cxx = "std::string", java = "io.v6d.std.string", include = {@CXXHead(system = "iosfwd"), @CXXHead(system = "string")}), @CXXTemplate(cxx = "std::vector<std::shared_ptr<arrow::ChunkedArray>>", java = "io.v6d.std.vector<io.v6d.std.shared_ptr<io.v6d.arrow.ChunkedArray>>", include = {@CXXHead(system = "arrow/chunked_array.h"), @CXXHead(system = "__memory/shared_ptr.h"), @CXXHead(system = "vector"), @CXXHead(system = "memory")}), @CXXTemplate(cxx = "std::shared_ptr<arrow::ChunkedArray>", java = "io.v6d.std.shared_ptr<io.v6d.arrow.ChunkedArray>", include = {@CXXHead(system = "arrow/chunked_array.h"), @CXXHead(system = "__memory/shared_ptr.h"), @CXXHead(system = "memory")}), @CXXTemplate(cxx = "std::shared_ptr<arrow::Field>", java = "io.v6d.std.shared_ptr<io.v6d.arrow.Field>", include = {@CXXHead(system = "arrow/type.h"), @CXXHead(system = "__memory/shared_ptr.h"), @CXXHead(system = "memory")}), @CXXTemplate(cxx = "long long", java = "io.v6d.std.CLongLong", include = @CXXHead(system = "sys/_types/_int64_t.h")), @CXXTemplate(cxx = "std::shared_ptr<arrow::RecordBatchReader>", java = "io.v6d.std.shared_ptr<io.v6d.arrow.RecordBatchReader>", include = {@CXXHead(system = "arrow/record_batch.h"), @CXXHead(system = "__memory/shared_ptr.h"), @CXXHead(system = "memory")}), @CXXTemplate(cxx = "std::shared_ptr<arrow::Schema>", java = "io.v6d.std.shared_ptr<io.v6d.arrow.Schema>", include = {@CXXHead(system = "arrow/type.h"), @CXXHead(system = "__memory/shared_ptr.h"), @CXXHead(system = "memory")}), @CXXTemplate(cxx = "std::shared_ptr<arrow::RecordBatch>", java = "io.v6d.std.shared_ptr<io.v6d.arrow.RecordBatch>", include = {@CXXHead(system = "arrow/record_batch.h"), @CXXHead(system = "__memory/shared_ptr.h"), @CXXHead(system = "memory"), @CXXHead("arrow/array/array_nested.h")}), @CXXTemplate(cxx = "std::shared_ptr<arrow::StructArray>", java = "io.v6d.std.shared_ptr<io.v6d.arrow.StructArray>", include = {@CXXHead(system = "arrow/array/array_nested.h"), @CXXHead(system = "__memory/shared_ptr.h"), @CXXHead(system = "memory")})}),
    @FFIGen(type = "io.v6d.arrow.stl.ArrayIterator", templates = {@CXXTemplate(cxx = "arrow::NumericArray<arrow::UInt16Type>", java = "io.v6d.arrow.NumericArray<io.v6d.arrow.UInt16Type>", include = @CXXHead(system = "arrow/array/array_primitive.h")), @CXXTemplate(cxx = "arrow::NumericArray<arrow::UInt8Type>", java = "io.v6d.arrow.NumericArray<io.v6d.arrow.UInt8Type>", include = @CXXHead(system = "arrow/array/array_primitive.h")), @CXXTemplate(cxx = "arrow::NumericArray<arrow::Int8Type>", java = "io.v6d.arrow.NumericArray<io.v6d.arrow.Int8Type>", include = @CXXHead(system = "arrow/array/array_primitive.h")), @CXXTemplate(cxx = "arrow::NumericArray<arrow::TimestampType>", java = "io.v6d.arrow.NumericArray<io.v6d.arrow.TimestampType>", include = @CXXHead(system = "arrow/array/array_primitive.h")), @CXXTemplate(cxx = "arrow::NumericArray<arrow::Int16Type>", java = "io.v6d.arrow.NumericArray<io.v6d.arrow.Int16Type>", include = @CXXHead(system = "arrow/array/array_primitive.h")), @CXXTemplate(cxx = "arrow::NumericArray<arrow::Date32Type>", java = "io.v6d.arrow.NumericArray<io.v6d.arrow.Date32Type>", include = @CXXHead(system = "arrow/array/array_primitive.h")), @CXXTemplate(cxx = "arrow::FixedSizeBinaryArray", java = "io.v6d.arrow.FixedSizeBinaryArray", include = @CXXHead(system = "arrow/array/array_binary.h")), @CXXTemplate(cxx = "arrow::NumericArray<arrow::UInt64Type>", java = "io.v6d.arrow.NumericArray<io.v6d.arrow.UInt64Type>", include = @CXXHead(system = "arrow/array/array_primitive.h")), @CXXTemplate(cxx = "arrow::NumericArray<arrow::Int32Type>", java = "io.v6d.arrow.NumericArray<io.v6d.arrow.Int32Type>", include = @CXXHead(system = "arrow/array/array_primitive.h")), @CXXTemplate(cxx = "arrow::NumericArray<arrow::Int64Type>", java = "io.v6d.arrow.NumericArray<io.v6d.arrow.Int64Type>", include = @CXXHead(system = "arrow/array/array_primitive.h")), @CXXTemplate(cxx = "arrow::NumericArray<arrow::UInt32Type>", java = "io.v6d.arrow.NumericArray<io.v6d.arrow.UInt32Type>", include = @CXXHead(system = "arrow/array/array_primitive.h")), @CXXTemplate(cxx = "arrow::BooleanArray", java = "io.v6d.arrow.BooleanArray", include = @CXXHead(system = "arrow/array/array_primitive.h")), @CXXTemplate(cxx = "arrow::NumericArray<arrow::DoubleType>", java = "io.v6d.arrow.NumericArray<io.v6d.arrow.DoubleType>", include = @CXXHead(system = "arrow/array/array_primitive.h")), @CXXTemplate(cxx = "arrow::NumericArray<arrow::FloatType>", java = "io.v6d.arrow.NumericArray<io.v6d.arrow.FloatType>", include = @CXXHead(system = "arrow/array/array_primitive.h")), @CXXTemplate(cxx = "arrow::NumericArray<arrow::Date64Type>", java = "io.v6d.arrow.NumericArray<io.v6d.arrow.Date64Type>", include = @CXXHead(system = "arrow/array/array_primitive.h"))}),
    @FFIGen(type = "io.v6d.std.unordered_map", templates = @CXXTemplate(cxx = {"std::string", "std::string"}, java = {"io.v6d.std.string", "io.v6d.std.string"}, include = {@CXXHead(system = "iosfwd"), @CXXHead(system = "string"), @CXXHead(system = "iosfwd"), @CXXHead(system = "string")})),
    @FFIGen(type = "io.v6d.std.__wrap_iter", templates = {@CXXTemplate(cxx = "std::vector<std::shared_ptr<arrow::Scalar>, std::allocator<std::shared_ptr<arrow::Scalar>>>::pointer", java = "io.v6d.std.impl.vector.PointerStdSharedPtrArrowScalarStdAllocatorStdSharedPtrArrowScalar", include = @CXXHead(system = "vector")), @CXXTemplate(cxx = "std::vector<std::shared_ptr<arrow::RecordBatch>, std::allocator<std::shared_ptr<arrow::RecordBatch>>>::const_pointer", java = "io.v6d.std.impl.vector.ConstPointerStdSharedPtrArrowRecordBatchStdAllocatorStdSharedPtrArrowRecordBatch", include = @CXXHead(system = "vector")), @CXXTemplate(cxx = "std::basic_string<char, std::char_traits<char>, std::allocator<char>>::const_pointer", java = "io.v6d.std.impl.basic_string.ConstPointerCharStdCharTraitsCharStdAllocatorChar", include = @CXXHead(system = "string")), @CXXTemplate(cxx = "std::vector<std::shared_ptr<arrow::Scalar>, std::allocator<std::shared_ptr<arrow::Scalar>>>::const_pointer", java = "io.v6d.std.impl.vector.ConstPointerStdSharedPtrArrowScalarStdAllocatorStdSharedPtrArrowScalar", include = @CXXHead(system = "vector")), @CXXTemplate(cxx = "std::vector<std::shared_ptr<arrow::Field>, std::allocator<std::shared_ptr<arrow::Field>>>::pointer", java = "io.v6d.std.impl.vector.PointerStdSharedPtrArrowFieldStdAllocatorStdSharedPtrArrowField", include = @CXXHead(system = "vector")), @CXXTemplate(cxx = "std::vector<std::shared_ptr<arrow::RecordBatch>, std::allocator<std::shared_ptr<arrow::RecordBatch>>>::pointer", java = "io.v6d.std.impl.vector.PointerStdSharedPtrArrowRecordBatchStdAllocatorStdSharedPtrArrowRecordBatch", include = @CXXHead(system = "vector")), @CXXTemplate(cxx = "std::vector<std::shared_ptr<arrow::Array>, std::allocator<std::shared_ptr<arrow::Array>>>::const_pointer", java = "io.v6d.std.impl.vector.ConstPointerStdSharedPtrArrowArrayStdAllocatorStdSharedPtrArrowArray", include = @CXXHead(system = "vector")), @CXXTemplate(cxx = "std::basic_string<char, std::char_traits<char>, std::allocator<char>>::pointer", java = "io.v6d.std.impl.basic_string.PointerCharStdCharTraitsCharStdAllocatorChar", include = @CXXHead(system = "string")), @CXXTemplate(cxx = "std::vector<std::shared_ptr<arrow::Field>, std::allocator<std::shared_ptr<arrow::Field>>>::const_pointer", java = "io.v6d.std.impl.vector.ConstPointerStdSharedPtrArrowFieldStdAllocatorStdSharedPtrArrowField", include = @CXXHead(system = "vector")), @CXXTemplate(cxx = "std::vector<std::shared_ptr<arrow::Array>, std::allocator<std::shared_ptr<arrow::Array>>>::pointer", java = "io.v6d.std.impl.vector.PointerStdSharedPtrArrowArrayStdAllocatorStdSharedPtrArrowArray", include = @CXXHead(system = "vector"))}),
    @FFIGen(type = "io.v6d.std.reverse_iterator", templates = {@CXXTemplate(cxx = "std::vector<std::shared_ptr<arrow::Field>, std::allocator<std::shared_ptr<arrow::Field>>>::const_iterator", java = "io.v6d.std.impl.vector.ConstIteratorStdSharedPtrArrowFieldStdAllocatorStdSharedPtrArrowField", include = @CXXHead(system = "vector")), @CXXTemplate(cxx = "std::vector<std::shared_ptr<arrow::Scalar>, std::allocator<std::shared_ptr<arrow::Scalar>>>::iterator", java = "io.v6d.std.impl.vector.IteratorStdSharedPtrArrowScalarStdAllocatorStdSharedPtrArrowScalar", include = @CXXHead(system = "vector")), @CXXTemplate(cxx = "std::basic_string<char, std::char_traits<char>, std::allocator<char>>::const_iterator", java = "io.v6d.std.impl.basic_string.ConstIteratorCharStdCharTraitsCharStdAllocatorChar", include = @CXXHead(system = "string")), @CXXTemplate(cxx = "std::vector<std::shared_ptr<arrow::Array>, std::allocator<std::shared_ptr<arrow::Array>>>::iterator", java = "io.v6d.std.impl.vector.IteratorStdSharedPtrArrowArrayStdAllocatorStdSharedPtrArrowArray", include = @CXXHead(system = "vector")), @CXXTemplate(cxx = "std::vector<std::shared_ptr<arrow::RecordBatch>, std::allocator<std::shared_ptr<arrow::RecordBatch>>>::const_iterator", java = "io.v6d.std.impl.vector.ConstIteratorStdSharedPtrArrowRecordBatchStdAllocatorStdSharedPtrArrowRecordBatch", include = @CXXHead(system = "vector")), @CXXTemplate(cxx = "std::vector<std::shared_ptr<arrow::Field>, std::allocator<std::shared_ptr<arrow::Field>>>::iterator", java = "io.v6d.std.impl.vector.IteratorStdSharedPtrArrowFieldStdAllocatorStdSharedPtrArrowField", include = @CXXHead(system = "vector")), @CXXTemplate(cxx = "std::vector<std::shared_ptr<arrow::RecordBatch>, std::allocator<std::shared_ptr<arrow::RecordBatch>>>::iterator", java = "io.v6d.std.impl.vector.IteratorStdSharedPtrArrowRecordBatchStdAllocatorStdSharedPtrArrowRecordBatch", include = @CXXHead(system = "vector")), @CXXTemplate(cxx = "std::basic_string<char, std::char_traits<char>, std::allocator<char>>::iterator", java = "io.v6d.std.impl.basic_string.IteratorCharStdCharTraitsCharStdAllocatorChar", include = @CXXHead(system = "string")), @CXXTemplate(cxx = "std::vector<std::shared_ptr<arrow::Array>, std::allocator<std::shared_ptr<arrow::Array>>>::const_iterator", java = "io.v6d.std.impl.vector.ConstIteratorStdSharedPtrArrowArrayStdAllocatorStdSharedPtrArrowArray", include = @CXXHead(system = "vector")), @CXXTemplate(cxx = "std::vector<std::shared_ptr<arrow::Scalar>, std::allocator<std::shared_ptr<arrow::Scalar>>>::const_iterator", java = "io.v6d.std.impl.vector.ConstIteratorStdSharedPtrArrowScalarStdAllocatorStdSharedPtrArrowScalar", include = @CXXHead(system = "vector"))}),
    @FFIGen(type = "io.v6d.std.shared_ptr", templates = {@CXXTemplate(cxx = "arrow::StringArray", java = "io.v6d.arrow.StringArray"), @CXXTemplate(cxx = "arrow::Device", java = "io.v6d.arrow.Device", include = @CXXHead(system = "arrow/device.h")), @CXXTemplate(cxx = "arrow::NullArray", java = "io.v6d.arrow.NullArray", include = @CXXHead(system = "arrow/array/array_base.h")), @CXXTemplate(cxx = "arrow::Table", java = "io.v6d.arrow.Table", include = @CXXHead(system = "arrow/table.h")), @CXXTemplate(cxx = "arrow::Buffer", java = "io.v6d.arrow.Buffer", include = {@CXXHead(system = "arrow/buffer.h"), @CXXHead("arrow/status.h")}), @CXXTemplate(cxx = "arrow::KeyValueMetadata", java = "io.v6d.arrow.KeyValueMetadata", include = @CXXHead(system = "arrow/util/key_value_metadata.h")), @CXXTemplate(cxx = "vineyard::DataFrame", java = "io.v6d.vineyard.DataFrame", include = @CXXHead("basic/ds/dataframe.vineyard.h")), @CXXTemplate(cxx = "arrow::BinaryArray", java = "io.v6d.arrow.BinaryArray"), @CXXTemplate(cxx = "arrow::Schema", java = "io.v6d.arrow.Schema", include = @CXXHead(system = "arrow/type.h")), @CXXTemplate(cxx = "arrow::ChunkedArray", java = "io.v6d.arrow.ChunkedArray", include = @CXXHead(system = "arrow/chunked_array.h")), @CXXTemplate(cxx = "arrow::io::RandomAccessFile", java = "io.v6d.arrow.io.RandomAccessFile", include = @CXXHead(system = "arrow/io/interfaces.h")), @CXXTemplate(cxx = "arrow::NumericBuilder<arrow::Int8Type>::ArrayType", java = "io.v6d.arrow.impl.numericbuilder.ArrayTypeArrowInt8Type", include = @CXXHead(system = "arrow/array/builder_primitive.h")), @CXXTemplate(cxx = "arrow::Scalar", java = "io.v6d.arrow.Scalar", include = @CXXHead(system = "arrow/scalar.h")), @CXXTemplate(cxx = "arrow::NumericBuilder<arrow::TimestampType>::ArrayType", java = "io.v6d.arrow.impl.numericbuilder.ArrayTypeArrowTimestampType", include = @CXXHead(system = "arrow/array/builder_primitive.h")), @CXXTemplate(cxx = "vineyard::ITensorBuilder", java = "io.v6d.vineyard.ITensorBuilder", include = @CXXHead("basic/ds/tensor.h")), @CXXTemplate(cxx = "vineyard::Table", java = "io.v6d.vineyard.Table", include = @CXXHead("basic/ds/arrow.vineyard.h")), @CXXTemplate(cxx = "vineyard::BooleanArrayBuilder::ArrayType", java = "io.v6d.vineyard.BooleanArrayBuilder.ArrayType", include = @CXXHead("basic/ds/arrow.h")), @CXXTemplate(cxx = "arrow::Schema", java = "io.v6d.arrow.Schema", include = @CXXHead(system = "arrow/type.h")), @CXXTemplate(cxx = "arrow::ArrayData", java = "io.v6d.arrow.ArrayData", include = {@CXXHead(system = "arrow/array/data.h"), @CXXHead("arrow/type.h")}), @CXXTemplate(cxx = "arrow::Field", java = "io.v6d.arrow.Field", include = @CXXHead(system = "arrow/type.h")), @CXXTemplate(cxx = "arrow::ChunkedArray", java = "io.v6d.arrow.ChunkedArray", include = @CXXHead(system = "arrow/chunked_array.h")), @CXXTemplate(cxx = "arrow::NumericBuilder<arrow::UInt16Type>::ArrayType", java = "io.v6d.arrow.impl.numericbuilder.ArrayTypeArrowUInt16Type", include = @CXXHead(system = "arrow/array/builder_primitive.h")), @CXXTemplate(cxx = "arrow::Buffer", java = "io.v6d.arrow.Buffer", include = {@CXXHead(system = "arrow/buffer.h"), @CXXHead("arrow/status.h")}), @CXXTemplate(cxx = "arrow::NumericBuilder<arrow::DoubleType>::ArrayType", java = "io.v6d.arrow.impl.numericbuilder.ArrayTypeArrowDoubleType", include = @CXXHead(system = "arrow/array/builder_primitive.h")), @CXXTemplate(cxx = "vineyard::InstanceStatus", java = "io.v6d.vineyard.InstanceStatus", include = @CXXHead("client/client_base.h")), @CXXTemplate(cxx = "arrow::NumericBuilder<arrow::UInt64Type>::ArrayType", java = "io.v6d.arrow.impl.numericbuilder.ArrayTypeArrowUInt64Type", include = @CXXHead(system = "arrow/array/builder_primitive.h")), @CXXTemplate(cxx = "vineyard::BooleanArray::ArrayType", java = "io.v6d.vineyard.BooleanArray.ArrayType", include = @CXXHead("basic/ds/arrow.vineyard.h")), @CXXTemplate(cxx = "vineyard::NumericArrayBuilder<signed char>::ArrayType", java = "io.v6d.vineyard.impl.numericarraybuilder.ArrayTypeSignedChar", include = @CXXHead("basic/ds/arrow.h")), @CXXTemplate(cxx = "vineyard::NumericArrayBuilder<double>::ArrayType", java = "io.v6d.vineyard.impl.numericarraybuilder.ArrayTypeDouble", include = @CXXHead("basic/ds/arrow.h")), @CXXTemplate(cxx = "arrow::RecordBatchReader", java = "io.v6d.arrow.RecordBatchReader", include = @CXXHead(system = "arrow/record_batch.h")), @CXXTemplate(cxx = "arrow::NumericBuilder<arrow::Int64Type>::ArrayType", java = "io.v6d.arrow.impl.numericbuilder.ArrayTypeArrowInt64Type", include = @CXXHead(system = "arrow/array/builder_primitive.h")), @CXXTemplate(cxx = "arrow::ArrayBuilder", java = "io.v6d.arrow.ArrayBuilder", include = @CXXHead(system = "arrow/array/builder_base.h")), @CXXTemplate(cxx = "arrow::NumericBuilder<arrow::UInt8Type>::ArrayType", java = "io.v6d.arrow.impl.numericbuilder.ArrayTypeArrowUInt8Type", include = @CXXHead(system = "arrow/array/builder_primitive.h")), @CXXTemplate(cxx = "vineyard::FixedSizeBinaryArray", java = "io.v6d.vineyard.FixedSizeBinaryArray", include = @CXXHead("basic/ds/arrow.vineyard.h")), @CXXTemplate(cxx = "arrow::FixedSizeBinaryArray", java = "io.v6d.arrow.FixedSizeBinaryArray", include = @CXXHead(system = "arrow/array/array_binary.h")), @CXXTemplate(cxx = "arrow::StructArray", java = "io.v6d.arrow.StructArray", include = @CXXHead(system = "arrow/array/array_nested.h")), @CXXTemplate(cxx = "vineyard::GlobalTensor", java = "io.v6d.vineyard.GlobalTensor", include = @CXXHead("basic/ds/tensor.h")), @CXXTemplate(cxx = "arrow::NumericBuilder<arrow::Int32Type>::ArrayType", java = "io.v6d.arrow.impl.numericbuilder.ArrayTypeArrowInt32Type", include = @CXXHead(system = "arrow/array/builder_primitive.h")), @CXXTemplate(cxx = "arrow::Table", java = "io.v6d.arrow.Table", include = @CXXHead(system = "arrow/table.h")), @CXXTemplate(cxx = "arrow::NumericBuilder<arrow::Date32Type>::ArrayType", java = "io.v6d.arrow.impl.numericbuilder.ArrayTypeArrowDate32Type", include = @CXXHead(system = "arrow/array/builder_primitive.h")), @CXXTemplate(cxx = "vineyard::BooleanArray", java = "io.v6d.vineyard.BooleanArray", include = @CXXHead("basic/ds/arrow.vineyard.h")), @CXXTemplate(cxx = "vineyard::ITensor", java = "io.v6d.vineyard.ITensor", include = @CXXHead("basic/ds/tensor.vineyard.h")), @CXXTemplate(cxx = "arrow::io::OutputStream", java = "io.v6d.arrow.io.OutputStream", include = @CXXHead(system = "arrow/io/interfaces.h")), @CXXTemplate(cxx = "vineyard::NullArray", java = "io.v6d.vineyard.NullArray", include = @CXXHead("basic/ds/arrow.vineyard.h")), @CXXTemplate(cxx = "vineyard::NumericArrayBuilder<short>::ArrayType", java = "io.v6d.vineyard.impl.numericarraybuilder.ArrayTypeShort", include = @CXXHead("basic/ds/arrow.h")), @CXXTemplate(cxx = "vineyard::NumericArrayBuilder<unsigned int>::ArrayType", java = "io.v6d.vineyard.impl.numericarraybuilder.ArrayTypeUnsignedInt", include = @CXXHead("basic/ds/arrow.h")), @CXXTemplate(cxx = "arrow::MutableBuffer", java = "io.v6d.arrow.MutableBuffer", include = @CXXHead(system = "arrow/buffer.h")), @CXXTemplate(cxx = "vineyard::NumericArrayBuilder<float>::ArrayType", java = "io.v6d.vineyard.impl.numericarraybuilder.ArrayTypeFloat", include = @CXXHead("basic/ds/arrow.h")), @CXXTemplate(cxx = "arrow::Array", java = "io.v6d.arrow.Array", include = @CXXHead(system = "arrow/array/array_base.h")), @CXXTemplate(cxx = "vineyard::ObjectBuilder", java = "io.v6d.vineyard.ObjectBuilder", include = @CXXHead("client/ds/i_object.h")), @CXXTemplate(cxx = "arrow::RecordBatch", java = "io.v6d.arrow.RecordBatch", include = {@CXXHead(system = "arrow/record_batch.h"), @CXXHead("arrow/array/array_nested.h")}), @CXXTemplate(cxx = "arrow::NumericBuilder<arrow::FloatType>::ArrayType", java = "io.v6d.arrow.impl.numericbuilder.ArrayTypeArrowFloatType", include = @CXXHead(system = "arrow/array/builder_primitive.h")), @CXXTemplate(cxx = "arrow::NumericBuilder<arrow::UInt32Type>::ArrayType", java = "io.v6d.arrow.impl.numericbuilder.ArrayTypeArrowUInt32Type", include = @CXXHead(system = "arrow/array/builder_primitive.h")), @CXXTemplate(cxx = "arrow::NumericBuilder<arrow::Date64Type>::ArrayType", java = "io.v6d.arrow.impl.numericbuilder.ArrayTypeArrowDate64Type", include = @CXXHead(system = "arrow/array/builder_primitive.h")), @CXXTemplate(cxx = "arrow::StatusDetail", java = "io.v6d.arrow.StatusDetail", include = @CXXHead(system = "arrow/status.h")), @CXXTemplate(cxx = "vineyard::NumericArrayBuilder<unsigned char>::ArrayType", java = "io.v6d.vineyard.impl.numericarraybuilder.ArrayTypeUnsignedChar", include = @CXXHead("basic/ds/arrow.h")), @CXXTemplate(cxx = "arrow::Array", java = "io.v6d.arrow.Array", include = @CXXHead(system = "arrow/array/array_base.h")), @CXXTemplate(cxx = "arrow::MemoryManager", java = "io.v6d.arrow.MemoryManager", include = {@CXXHead(system = "arrow/device.h"), @CXXHead("arrow/result.h")}), @CXXTemplate(cxx = "vineyard::NumericArrayBuilder<int>::ArrayType", java = "io.v6d.vineyard.impl.numericarraybuilder.ArrayTypeInt", include = @CXXHead("basic/ds/arrow.h")), @CXXTemplate(cxx = "vineyard::GlobalDataFrame", java = "io.v6d.vineyard.GlobalDataFrame", include = @CXXHead("basic/ds/dataframe.h")), @CXXTemplate(cxx = "arrow::io::InputStream", java = "io.v6d.arrow.io.InputStream", include = {@CXXHead(system = "arrow/io/interfaces.h"), @CXXHead("arrow/status.h"), @CXXHead("arrow/result.h")}), @CXXTemplate(cxx = "arrow::io::RandomAccessFile", java = "io.v6d.arrow.io.RandomAccessFile", include = @CXXHead(system = "arrow/io/interfaces.h")), @CXXTemplate(cxx = "vineyard::RecordBatch", java = "io.v6d.vineyard.RecordBatch", include = @CXXHead("basic/ds/arrow.vineyard.h")), @CXXTemplate(cxx = "vineyard::SchemaProxy", java = "io.v6d.vineyard.SchemaProxy", include = @CXXHead("basic/ds/arrow.vineyard.h")), @CXXTemplate(cxx = "vineyard::NullArray::ArrayType", java = "io.v6d.vineyard.NullArray.ArrayType", include = @CXXHead("basic/ds/arrow.vineyard.h")), @CXXTemplate(cxx = "vineyard::NumericArrayBuilder<unsigned short>::ArrayType", java = "io.v6d.vineyard.impl.numericarraybuilder.ArrayTypeUnsignedShort", include = @CXXHead("basic/ds/arrow.h")), @CXXTemplate(cxx = "vineyard::NumericArrayBuilder<long long>::ArrayType", java = "io.v6d.vineyard.impl.numericarraybuilder.ArrayTypeLongLong", include = @CXXHead("basic/ds/arrow.h")), @CXXTemplate(cxx = "arrow::BooleanArray", java = "io.v6d.arrow.BooleanArray", include = @CXXHead(system = "arrow/array/array_primitive.h")), @CXXTemplate(cxx = "vineyard::NumericArrayBuilder<unsigned long long>::ArrayType", java = "io.v6d.vineyard.impl.numericarraybuilder.ArrayTypeUnsignedLongLong", include = @CXXHead("basic/ds/arrow.h")), @CXXTemplate(cxx = "arrow::ListArray", java = "io.v6d.arrow.ListArray"), @CXXTemplate(cxx = "arrow::LargeListArray", java = "io.v6d.arrow.LargeListArray"), @CXXTemplate(cxx = "vineyard::Object", java = "io.v6d.vineyard.Object", include = @CXXHead("client/ds/i_object.h")), @CXXTemplate(cxx = "vineyard::BufferSet", java = "io.v6d.vineyard.BufferSet", include = @CXXHead("client/ds/blob.h")), @CXXTemplate(cxx = "arrow::RecordBatch", java = "io.v6d.arrow.RecordBatch", include = {@CXXHead(system = "arrow/record_batch.h"), @CXXHead("arrow/array/array_nested.h")}), @CXXTemplate(cxx = "arrow::FixedSizeBinaryArray", java = "io.v6d.arrow.FixedSizeBinaryArray", include = @CXXHead(system = "arrow/array/array_binary.h")), @CXXTemplate(cxx = "arrow::NumericBuilder<arrow::Int16Type>::ArrayType", java = "io.v6d.arrow.impl.numericbuilder.ArrayTypeArrowInt16Type", include = @CXXHead(system = "arrow/array/builder_primitive.h")), @CXXTemplate(cxx = "arrow::KeyValueMetadata", java = "io.v6d.arrow.KeyValueMetadata", include = @CXXHead(system = "arrow/util/key_value_metadata.h")), @CXXTemplate(cxx = "arrow::DataType", java = "io.v6d.arrow.DataType", include = @CXXHead(system = "arrow/type.h")), @CXXTemplate(cxx = "arrow::LargeStringArray", java = "io.v6d.arrow.LargeStringArray"), @CXXTemplate(cxx = "vineyard::Sequence", java = "io.v6d.vineyard.Sequence", include = @CXXHead("basic/ds/sequence.vineyard.h")), @CXXTemplate(cxx = "arrow::LargeBinaryArray", java = "io.v6d.arrow.LargeBinaryArray")}),
    @FFIGen(type = "io.v6d.vineyard.BaseListArrayBuilder", templates = {@CXXTemplate(cxx = "arrow::LargeListArray", java = "io.v6d.arrow.LargeListArray", include = @CXXHead(system = "arrow/array/array_nested.h")), @CXXTemplate(cxx = "arrow::ListArray", java = "io.v6d.arrow.ListArray", include = @CXXHead(system = "arrow/array/array_nested.h"))}),
    @FFIGen(type = "io.v6d.std.allocator", templates = {@CXXTemplate(cxx = "std::shared_ptr<arrow::RecordBatch>", java = "io.v6d.std.shared_ptr<io.v6d.arrow.RecordBatch>", include = {@CXXHead(system = "__memory/shared_ptr.h"), @CXXHead(system = "memory"), @CXXHead("arrow/array/array_nested.h")}), @CXXTemplate(cxx = "std::shared_ptr<arrow::Array>", java = "io.v6d.std.shared_ptr<io.v6d.arrow.Array>", include = {@CXXHead(system = "__memory/shared_ptr.h"), @CXXHead(system = "memory")}), @CXXTemplate(cxx = "std::shared_ptr<arrow::Field>", java = "io.v6d.std.shared_ptr<io.v6d.arrow.Field>", include = {@CXXHead(system = "__memory/shared_ptr.h"), @CXXHead(system = "memory")}), @CXXTemplate(cxx = "char", java = "io.v6d.std.CChar"), @CXXTemplate(cxx = "std::shared_ptr<arrow::Scalar>", java = "io.v6d.std.shared_ptr<io.v6d.arrow.Scalar>", include = {@CXXHead(system = "__memory/shared_ptr.h"), @CXXHead(system = "memory")})}),
    @FFIGen(type = "io.v6d.std.pair", templates = {@CXXTemplate(cxx = {"std::string", "std::string"}, java = {"io.v6d.std.string", "io.v6d.std.string"}, include = {@CXXHead(system = "iosfwd"), @CXXHead(system = "string"), @CXXHead(system = "iosfwd"), @CXXHead(system = "string")}), @CXXTemplate(cxx = {"unsigned long", "unsigned long"}, java = {"io.v6d.std.CUnsignedLong", "io.v6d.std.CUnsignedLong"}, include = {@CXXHead(system = "stddef.h"), @CXXHead(system = "stddef.h")})}),
    @FFIGen(type = "io.v6d.std.map", templates = @CXXTemplate(cxx = {"unsigned long long", "std::shared_ptr<arrow::Buffer>"}, java = {"io.v6d.std.CUnsignedLongLong", "io.v6d.std.shared_ptr<io.v6d.arrow.Buffer>"}, include = {@CXXHead("common/util/uuid.h"), @CXXHead(system = "arrow/buffer.h"), @CXXHead(system = "__memory/shared_ptr.h"), @CXXHead(system = "memory"), @CXXHead("arrow/status.h")})),
    @FFIGen(type = "io.v6d.vineyard.BaseBinaryArray", templates = {@CXXTemplate(cxx = "arrow::LargeStringArray", java = "io.v6d.arrow.LargeStringArray", include = @CXXHead(system = "arrow/array/array_binary.h")), @CXXTemplate(cxx = "arrow::LargeBinaryArray", java = "io.v6d.arrow.LargeBinaryArray", include = @CXXHead(system = "arrow/array/array_binary.h")), @CXXTemplate(cxx = "arrow::StringArray", java = "io.v6d.arrow.StringArray", include = @CXXHead(system = "arrow/array/array_binary.h")), @CXXTemplate(cxx = "arrow::BinaryArray", java = "io.v6d.arrow.BinaryArray", include = @CXXHead(system = "arrow/array/array_binary.h"))}),
    @FFIGen(type = "io.v6d.vineyard.BaseBinaryArrayBuilder", templates = {@CXXTemplate(cxx = "arrow::LargeStringArray", java = "io.v6d.arrow.LargeStringArray", include = @CXXHead(system = "arrow/array/array_binary.h")), @CXXTemplate(cxx = "arrow::LargeBinaryArray", java = "io.v6d.arrow.LargeBinaryArray", include = @CXXHead(system = "arrow/array/array_binary.h")), @CXXTemplate(cxx = "arrow::StringArray", java = "io.v6d.arrow.StringArray", include = @CXXHead(system = "arrow/array/array_binary.h")), @CXXTemplate(cxx = "arrow::BinaryArray", java = "io.v6d.arrow.BinaryArray", include = @CXXHead(system = "arrow/array/array_binary.h"))})
})
interface T0 {
}
