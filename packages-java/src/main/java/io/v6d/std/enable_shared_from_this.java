// Code generated by alibaba/fastFFI. DO NOT EDIT.
//
package io.v6d.std;

import com.alibaba.fastffi.CXXHead;
import com.alibaba.fastffi.CXXValue;
import com.alibaba.fastffi.FFIGen;
import com.alibaba.fastffi.FFINameAlias;
import com.alibaba.fastffi.FFIPointer;
import com.alibaba.fastffi.FFITypeAlias;
import com.alibaba.fastffi.FFITypeFactory;
import java.lang.Class;
import java.lang.ClassNotFoundException;
import java.lang.IllegalAccessException;
import java.lang.InstantiationException;
import java.lang.Long;
import java.lang.NoSuchMethodException;
import java.lang.reflect.InvocationTargetException;

@FFITypeAlias("std::enable_shared_from_this")
@FFIGen
@CXXHead(
        system = "__memory/shared_ptr.h"
)
public interface enable_shared_from_this<_Tp> extends FFIPointer {
    @CXXValue
    shared_ptr<_Tp> shared_from_this();

    @CXXValue
    @FFINameAlias("shared_from_this")
    shared_ptr<_Tp> shared_from_this_1();

    static <_Tp> enable_shared_from_this<_Tp> cast(Class<_Tp> ___tp, final long __foreign_address) {
        try {
            Class<enable_shared_from_this<_Tp>> clz = (Class<enable_shared_from_this<_Tp>>) FFITypeFactory.getType(FFITypeFactory.getFFITypeName(FFITypeFactory.makeParameterizedType(enable_shared_from_this.class, ___tp), true));
            return clz.getConstructor(Long.TYPE).newInstance(__foreign_address);
        } catch (ClassNotFoundException | NoSuchMethodException | InvocationTargetException | InstantiationException | IllegalAccessException e) {
            return null;
        }
    }

    static <_Tp> enable_shared_from_this<_Tp> cast(Class<_Tp> ___tp,
            final FFIPointer __foreign_pointer) {
        return enable_shared_from_this.cast(___tp, __foreign_pointer.getAddress());
    }
}
