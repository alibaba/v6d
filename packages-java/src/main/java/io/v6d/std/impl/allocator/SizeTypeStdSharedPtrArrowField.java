// Code generated by alibaba/fastFFI. DO NOT EDIT.
//
package io.v6d.std.impl.allocator;

import com.alibaba.fastffi.CXXHead;
import com.alibaba.fastffi.CXXPointer;
import com.alibaba.fastffi.FFIExpr;
import com.alibaba.fastffi.FFIFactory;
import com.alibaba.fastffi.FFIGen;
import com.alibaba.fastffi.FFIPointer;
import com.alibaba.fastffi.FFITypeAlias;
import com.alibaba.fastffi.FFITypeFactory;
import java.lang.Class;
import java.lang.ClassNotFoundException;
import java.lang.IllegalAccessException;
import java.lang.InstantiationException;
import java.lang.Long;
import java.lang.NoSuchMethodException;
import java.lang.reflect.InvocationTargetException;

@FFITypeAlias("std::allocator<std::shared_ptr<arrow::Field>>::size_type")
@FFIGen
@CXXHead(
        system = "__memory/allocator.h"
)
public interface SizeTypeStdSharedPtrArrowField extends CXXPointer {
    @FFIExpr("(*{0})")
    long get();

    @FFIExpr("*{0} = (std::allocator<std::shared_ptr<arrow::Field>>::size_type){1}")
    void set(long __value);

    static SizeTypeStdSharedPtrArrowField cast(final long __foreign_address) {
        try {
            Class<SizeTypeStdSharedPtrArrowField> clz = (Class<SizeTypeStdSharedPtrArrowField>) FFITypeFactory.getType(FFITypeFactory.getFFITypeName(SizeTypeStdSharedPtrArrowField.class, true));
            return clz.getConstructor(Long.TYPE).newInstance(__foreign_address);
        } catch (ClassNotFoundException | NoSuchMethodException | InvocationTargetException | InstantiationException | IllegalAccessException e) {
            return null;
        }
    }

    static SizeTypeStdSharedPtrArrowField cast(final FFIPointer __foreign_pointer) {
        return SizeTypeStdSharedPtrArrowField.cast(__foreign_pointer.getAddress());
    }

    static Factory getFactory() {
        return FFITypeFactory.getFactory(FFITypeFactory.getFFITypeName(SizeTypeStdSharedPtrArrowField.class, true));
    }

    static SizeTypeStdSharedPtrArrowField create() {
        return SizeTypeStdSharedPtrArrowField.getFactory().create();
    }

    static SizeTypeStdSharedPtrArrowField create(long __value) {
        return SizeTypeStdSharedPtrArrowField.getFactory().create(__value);
    }

    @FFIFactory
    @CXXHead(
            system = "__memory/allocator.h"
    )
    interface Factory {
        SizeTypeStdSharedPtrArrowField create();

        SizeTypeStdSharedPtrArrowField create(long __value);
    }
}
