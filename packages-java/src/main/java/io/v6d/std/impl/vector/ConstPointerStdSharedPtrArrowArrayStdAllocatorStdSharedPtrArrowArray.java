// Code generated by alibaba/fastFFI. DO NOT EDIT.
//
package io.v6d.std.impl.vector;

import com.alibaba.fastffi.CXXHead;
import com.alibaba.fastffi.CXXPointer;
import com.alibaba.fastffi.FFIGen;
import com.alibaba.fastffi.FFIPointer;
import com.alibaba.fastffi.FFITypeAlias;
import com.alibaba.fastffi.FFITypeFactory;
import java.lang.Class;
import java.lang.ClassNotFoundException;
import java.lang.IllegalAccessException;
import java.lang.InstantiationException;
import java.lang.Long;
import java.lang.NoSuchMethodException;
import java.lang.reflect.InvocationTargetException;

@FFITypeAlias("std::vector<std::shared_ptr<arrow::Array>, std::allocator<std::shared_ptr<arrow::Array>>>::const_pointer")
@FFIGen
@CXXHead(
        system = "vector"
)
public interface ConstPointerStdSharedPtrArrowArrayStdAllocatorStdSharedPtrArrowArray extends CXXPointer {
    static ConstPointerStdSharedPtrArrowArrayStdAllocatorStdSharedPtrArrowArray cast(
            final long __foreign_address) {
        try {
            Class<ConstPointerStdSharedPtrArrowArrayStdAllocatorStdSharedPtrArrowArray> clz = (Class<ConstPointerStdSharedPtrArrowArrayStdAllocatorStdSharedPtrArrowArray>) FFITypeFactory.getType(FFITypeFactory.getFFITypeName(ConstPointerStdSharedPtrArrowArrayStdAllocatorStdSharedPtrArrowArray.class, true));
            return clz.getConstructor(Long.TYPE).newInstance(__foreign_address);
        } catch (ClassNotFoundException | NoSuchMethodException | InvocationTargetException | InstantiationException | IllegalAccessException e) {
            return null;
        }
    }

    static ConstPointerStdSharedPtrArrowArrayStdAllocatorStdSharedPtrArrowArray cast(
            final FFIPointer __foreign_pointer) {
        return ConstPointerStdSharedPtrArrowArrayStdAllocatorStdSharedPtrArrowArray.cast(__foreign_pointer.getAddress());
    }
}
