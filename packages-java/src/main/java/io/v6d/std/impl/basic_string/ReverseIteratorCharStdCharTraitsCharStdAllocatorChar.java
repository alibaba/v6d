// Code generated by alibaba/fastFFI. DO NOT EDIT.
//
package io.v6d.std.impl.basic_string;

import com.alibaba.fastffi.CXXHead;
import com.alibaba.fastffi.CXXPointer;
import com.alibaba.fastffi.FFIExpr;
import com.alibaba.fastffi.FFIGen;
import com.alibaba.fastffi.FFIPointer;
import com.alibaba.fastffi.FFITypeAlias;
import com.alibaba.fastffi.FFITypeFactory;
import io.v6d.std.reverse_iterator;
import java.lang.Class;
import java.lang.ClassNotFoundException;
import java.lang.IllegalAccessException;
import java.lang.InstantiationException;
import java.lang.Long;
import java.lang.NoSuchMethodException;
import java.lang.reflect.InvocationTargetException;

@FFITypeAlias("std::basic_string<char, std::char_traits<char>, std::allocator<char>>::reverse_iterator")
@FFIGen
@CXXHead(
        system = "string"
)
public interface ReverseIteratorCharStdCharTraitsCharStdAllocatorChar extends CXXPointer {
    @FFIExpr("{0}")
    reverse_iterator<IteratorCharStdCharTraitsCharStdAllocatorChar> get();

    static ReverseIteratorCharStdCharTraitsCharStdAllocatorChar cast(final long __foreign_address) {
        try {
            Class<ReverseIteratorCharStdCharTraitsCharStdAllocatorChar> clz = (Class<ReverseIteratorCharStdCharTraitsCharStdAllocatorChar>) FFITypeFactory.getType(FFITypeFactory.getFFITypeName(ReverseIteratorCharStdCharTraitsCharStdAllocatorChar.class, true));
            return clz.getConstructor(Long.TYPE).newInstance(__foreign_address);
        } catch (ClassNotFoundException | NoSuchMethodException | InvocationTargetException | InstantiationException | IllegalAccessException e) {
            return null;
        }
    }

    static ReverseIteratorCharStdCharTraitsCharStdAllocatorChar cast(
            final FFIPointer __foreign_pointer) {
        return ReverseIteratorCharStdCharTraitsCharStdAllocatorChar.cast(__foreign_pointer.getAddress());
    }
}
