// Code generated by alibaba/fastFFI. DO NOT EDIT.
//
package io.v6d.vineyard;

import com.alibaba.fastffi.CXXHead;
import com.alibaba.fastffi.CXXReference;
import com.alibaba.fastffi.FFIGen;
import com.alibaba.fastffi.FFIGetter;
import com.alibaba.fastffi.FFIPointer;
import com.alibaba.fastffi.FFITypeAlias;
import com.alibaba.fastffi.FFITypeFactory;
import io.v6d.std.string;
import java.lang.Class;
import java.lang.ClassNotFoundException;
import java.lang.IllegalAccessException;
import java.lang.InstantiationException;
import java.lang.Long;
import java.lang.NoSuchMethodException;
import java.lang.reflect.InvocationTargetException;

@FFITypeAlias("vineyard::InstanceStatus")
@FFIGen
@CXXHead("client/client_base.h")
public interface InstanceStatus extends FFIPointer {
    @FFIGetter
    long instance_id();

    @FFIGetter
    @CXXReference
    string deployment();

    @FFIGetter
    long memory_usage();

    @FFIGetter
    long memory_limit();

    @FFIGetter
    long deferred_requests();

    @FFIGetter
    long ipc_connections();

    @FFIGetter
    long rpc_connections();

    static InstanceStatus cast(final long __foreign_address) {
        try {
            Class<InstanceStatus> clz = (Class<InstanceStatus>) FFITypeFactory.getType(FFITypeFactory.getFFITypeName(InstanceStatus.class, true));
            return clz.getConstructor(Long.TYPE).newInstance(__foreign_address);
        } catch (ClassNotFoundException | NoSuchMethodException | InvocationTargetException | InstantiationException | IllegalAccessException e) {
            return null;
        }
    }

    static InstanceStatus cast(final FFIPointer __foreign_pointer) {
        return InstanceStatus.cast(__foreign_pointer.getAddress());
    }
}
