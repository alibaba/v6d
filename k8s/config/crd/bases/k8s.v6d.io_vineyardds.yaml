---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: vineyardds.k8s.v6d.io
spec:
  group: k8s.v6d.io
  names:
    kind: Vineyardd
    listKind: VineyarddList
    plural: vineyardds
    singular: vineyardd
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.running
      name: Running
      type: string
    - jsonPath: .status.required
      name: Required
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Vineyardd is the Schema for the vineyardds API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: VineyarddSpec holds all configuration about vineyardd
            properties:
              config:
                description: vinyardd configuration
                properties:
                  enableMetrics:
                    description: enable the metrics in vineyardd
                    type: boolean
                  enablePrometheus:
                    description: whether to print metrics for prometheus
                    type: boolean
                  etcdCmd:
                    description: path of etcd executable
                    type: string
                  etcdEndpoint:
                    description: endpoint of etcd
                    type: string
                  etcdPrefix:
                    description: path prefix in etcd
                    type: string
                  sharedMemorySize:
                    description: shared memory size for vineyardd
                    type: string
                  socket:
                    description: ipc socket file location
                    type: string
                  spillConfig:
                    description: the configuration of spilling
                    properties:
                      name:
                        description: the name of the spill config
                        type: string
                      path:
                        description: the path of spilling
                        type: string
                      persistentVolumeClaimSpec:
                        description: the PersistentVolumeClaimSpec of the spill file
                        properties:
                          accessModes:
                            description: 'accessModes contains the desired access
                              modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                            items:
                              type: string
                            type: array
                          dataSource:
                            description: 'dataSource field can be used to specify
                              either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                              * An existing PVC (PersistentVolumeClaim) If the provisioner
                              or an external controller can support the specified
                              data source, it will create a new volume based on the
                              contents of the specified data source. If the AnyVolumeDataSource
                              feature gate is enabled, this field will always have
                              the same contents as the DataSourceRef field.'
                            properties:
                              apiGroup:
                                description: APIGroup is the group for the resource
                                  being referenced. If APIGroup is not specified,
                                  the specified Kind must be in the core API group.
                                  For any other third-party types, APIGroup is required.
                                type: string
                              kind:
                                description: Kind is the type of resource being referenced
                                type: string
                              name:
                                description: Name is the name of resource being referenced
                                type: string
                            required:
                            - kind
                            - name
                            type: object
                            x-kubernetes-map-type: atomic
                          dataSourceRef:
                            description: 'dataSourceRef specifies the object from
                              which to populate the volume with data, if a non-empty
                              volume is desired. This may be any local object from
                              a non-empty API group (non core object) or a PersistentVolumeClaim
                              object. When this field is specified, volume binding
                              will only succeed if the type of the specified object
                              matches some installed volume populator or dynamic provisioner.
                              This field will replace the functionality of the DataSource
                              field and as such if both fields are non-empty, they
                              must have the same value. For backwards compatibility,
                              both fields (DataSource and DataSourceRef) will be set
                              to the same value automatically if one of them is empty
                              and the other is non-empty. There are two important
                              differences between DataSource and DataSourceRef: *
                              While DataSource only allows two specific types of objects,
                              DataSourceRef allows any non-core object, as well as
                              PersistentVolumeClaim objects. * While DataSource ignores
                              disallowed values (dropping them), DataSourceRef preserves
                              all values, and generates an error if a disallowed value
                              is specified. (Beta) Using this field requires the AnyVolumeDataSource
                              feature gate to be enabled.'
                            properties:
                              apiGroup:
                                description: APIGroup is the group for the resource
                                  being referenced. If APIGroup is not specified,
                                  the specified Kind must be in the core API group.
                                  For any other third-party types, APIGroup is required.
                                type: string
                              kind:
                                description: Kind is the type of resource being referenced
                                type: string
                              name:
                                description: Name is the name of resource being referenced
                                type: string
                            required:
                            - kind
                            - name
                            type: object
                            x-kubernetes-map-type: atomic
                          resources:
                            description: 'resources represents the minimum resources
                              the volume should have. If RecoverVolumeExpansionFailure
                              feature is enabled users are allowed to specify resource
                              requirements that are lower than previous value but
                              must still be higher than capacity recorded in the status
                              field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                            properties:
                              limits:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Limits describes the maximum amount
                                  of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Requests describes the minimum amount
                                  of compute resources required. If Requests is omitted
                                  for a container, it defaults to Limits if that is
                                  explicitly specified, otherwise to an implementation-defined
                                  value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                            type: object
                          selector:
                            description: selector is a label query over volumes to
                              consider for binding.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                            x-kubernetes-map-type: atomic
                          storageClassName:
                            description: 'storageClassName is the name of the StorageClass
                              required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                            type: string
                          volumeMode:
                            description: volumeMode defines what type of volume is
                              required by the claim. Value of Filesystem is implied
                              when not included in claim spec.
                            type: string
                          volumeName:
                            description: volumeName is the binding reference to the
                              PersistentVolume backing this claim.
                            type: string
                        type: object
                      persistentVolumeSpec:
                        description: the PersistentVolumeSpec of the spilling PV
                        properties:
                          accessModes:
                            description: 'accessModes contains all ways the volume
                              can be mounted. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes'
                            items:
                              type: string
                            type: array
                          awsElasticBlockStore:
                            description: 'awsElasticBlockStore represents an AWS Disk
                              resource that is attached to a kubelet''s host machine
                              and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                            properties:
                              fsType:
                                description: 'fsType is the filesystem type of the
                                  volume that you want to mount. Tip: Ensure that
                                  the filesystem type is supported by the host operating
                                  system. Examples: "ext4", "xfs", "ntfs". Implicitly
                                  inferred to be "ext4" if unspecified. More info:
                                  https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                  TODO: how do we prevent errors in the filesystem
                                  from compromising the machine'
                                type: string
                              partition:
                                description: 'partition is the partition in the volume
                                  that you want to mount. If omitted, the default
                                  is to mount by volume name. Examples: For volume
                                  /dev/sda1, you specify the partition as "1". Similarly,
                                  the volume partition for /dev/sda is "0" (or you
                                  can leave the property empty).'
                                format: int32
                                type: integer
                              readOnly:
                                description: 'readOnly value true will force the readOnly
                                  setting in VolumeMounts. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                type: boolean
                              volumeID:
                                description: 'volumeID is unique ID of the persistent
                                  disk resource in AWS (Amazon EBS volume). More info:
                                  https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                type: string
                            required:
                            - volumeID
                            type: object
                          azureDisk:
                            description: azureDisk represents an Azure Data Disk mount
                              on the host and bind mount to the pod.
                            properties:
                              cachingMode:
                                description: 'cachingMode is the Host Caching mode:
                                  None, Read Only, Read Write.'
                                type: string
                              diskName:
                                description: diskName is the Name of the data disk
                                  in the blob storage
                                type: string
                              diskURI:
                                description: diskURI is the URI of data disk in the
                                  blob storage
                                type: string
                              fsType:
                                description: fsType is Filesystem type to mount. Must
                                  be a filesystem type supported by the host operating
                                  system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                                  to be "ext4" if unspecified.
                                type: string
                              kind:
                                description: 'kind expected values are Shared: multiple
                                  blob disks per storage account  Dedicated: single
                                  blob disk per storage account  Managed: azure managed
                                  data disk (only in managed availability set). defaults
                                  to shared'
                                type: string
                              readOnly:
                                description: readOnly Defaults to false (read/write).
                                  ReadOnly here will force the ReadOnly setting in
                                  VolumeMounts.
                                type: boolean
                            required:
                            - diskName
                            - diskURI
                            type: object
                          azureFile:
                            description: azureFile represents an Azure File Service
                              mount on the host and bind mount to the pod.
                            properties:
                              readOnly:
                                description: readOnly defaults to false (read/write).
                                  ReadOnly here will force the ReadOnly setting in
                                  VolumeMounts.
                                type: boolean
                              secretName:
                                description: secretName is the name of secret that
                                  contains Azure Storage Account Name and Key
                                type: string
                              secretNamespace:
                                description: secretNamespace is the namespace of the
                                  secret that contains Azure Storage Account Name
                                  and Key default is the same as the Pod
                                type: string
                              shareName:
                                description: shareName is the azure Share Name
                                type: string
                            required:
                            - secretName
                            - shareName
                            type: object
                          capacity:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'capacity is the description of the persistent
                              volume''s resources and capacity. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#capacity'
                            type: object
                          cephfs:
                            description: cephFS represents a Ceph FS mount on the
                              host that shares a pod's lifetime
                            properties:
                              monitors:
                                description: 'monitors is Required: Monitors is a
                                  collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                items:
                                  type: string
                                type: array
                              path:
                                description: 'path is Optional: Used as the mounted
                                  root, rather than the full Ceph tree, default is
                                  /'
                                type: string
                              readOnly:
                                description: 'readOnly is Optional: Defaults to false
                                  (read/write). ReadOnly here will force the ReadOnly
                                  setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                type: boolean
                              secretFile:
                                description: 'secretFile is Optional: SecretFile is
                                  the path to key ring for User, default is /etc/ceph/user.secret
                                  More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                type: string
                              secretRef:
                                description: 'secretRef is Optional: SecretRef is
                                  reference to the authentication secret for User,
                                  default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                properties:
                                  name:
                                    description: name is unique within a namespace
                                      to reference a secret resource.
                                    type: string
                                  namespace:
                                    description: namespace defines the space within
                                      which the secret name must be unique.
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                              user:
                                description: 'user is Optional: User is the rados
                                  user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                type: string
                            required:
                            - monitors
                            type: object
                          cinder:
                            description: 'cinder represents a cinder volume attached
                              and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                            properties:
                              fsType:
                                description: 'fsType Filesystem type to mount. Must
                                  be a filesystem type supported by the host operating
                                  system. Examples: "ext4", "xfs", "ntfs". Implicitly
                                  inferred to be "ext4" if unspecified. More info:
                                  https://examples.k8s.io/mysql-cinder-pd/README.md'
                                type: string
                              readOnly:
                                description: 'readOnly is Optional: Defaults to false
                                  (read/write). ReadOnly here will force the ReadOnly
                                  setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                type: boolean
                              secretRef:
                                description: 'secretRef is Optional: points to a secret
                                  object containing parameters used to connect to
                                  OpenStack.'
                                properties:
                                  name:
                                    description: name is unique within a namespace
                                      to reference a secret resource.
                                    type: string
                                  namespace:
                                    description: namespace defines the space within
                                      which the secret name must be unique.
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                              volumeID:
                                description: 'volumeID used to identify the volume
                                  in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                type: string
                            required:
                            - volumeID
                            type: object
                          claimRef:
                            description: 'claimRef is part of a bi-directional binding
                              between PersistentVolume and PersistentVolumeClaim.
                              Expected to be non-nil when bound. claim.VolumeName
                              is the authoritative bind between PV and PVC. More info:
                              https://kubernetes.io/docs/concepts/storage/persistent-volumes#binding'
                            properties:
                              apiVersion:
                                description: API version of the referent.
                                type: string
                              fieldPath:
                                description: 'If referring to a piece of an object
                                  instead of an entire object, this string should
                                  contain a valid JSON/Go field access statement,
                                  such as desiredState.manifest.containers[2]. For
                                  example, if the object reference is to a container
                                  within a pod, this would take on a value like: "spec.containers{name}"
                                  (where "name" refers to the name of the container
                                  that triggered the event) or if no container name
                                  is specified "spec.containers[2]" (container with
                                  index 2 in this pod). This syntax is chosen only
                                  to have some well-defined way of referencing a part
                                  of an object. TODO: this design is not final and
                                  this field is subject to change in the future.'
                                type: string
                              kind:
                                description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                              namespace:
                                description: 'Namespace of the referent. More info:
                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                type: string
                              resourceVersion:
                                description: 'Specific resourceVersion to which this
                                  reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                type: string
                              uid:
                                description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                          csi:
                            description: csi represents storage that is handled by
                              an external CSI driver (Beta feature).
                            properties:
                              controllerExpandSecretRef:
                                description: controllerExpandSecretRef is a reference
                                  to the secret object containing sensitive information
                                  to pass to the CSI driver to complete the CSI ControllerExpandVolume
                                  call. This is an alpha field and requires enabling
                                  ExpandCSIVolumes feature gate. This field is optional,
                                  and may be empty if no secret is required. If the
                                  secret object contains more than one secret, all
                                  secrets are passed.
                                properties:
                                  name:
                                    description: name is unique within a namespace
                                      to reference a secret resource.
                                    type: string
                                  namespace:
                                    description: namespace defines the space within
                                      which the secret name must be unique.
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                              controllerPublishSecretRef:
                                description: controllerPublishSecretRef is a reference
                                  to the secret object containing sensitive information
                                  to pass to the CSI driver to complete the CSI ControllerPublishVolume
                                  and ControllerUnpublishVolume calls. This field
                                  is optional, and may be empty if no secret is required.
                                  If the secret object contains more than one secret,
                                  all secrets are passed.
                                properties:
                                  name:
                                    description: name is unique within a namespace
                                      to reference a secret resource.
                                    type: string
                                  namespace:
                                    description: namespace defines the space within
                                      which the secret name must be unique.
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                              driver:
                                description: driver is the name of the driver to use
                                  for this volume. Required.
                                type: string
                              fsType:
                                description: fsType to mount. Must be a filesystem
                                  type supported by the host operating system. Ex.
                                  "ext4", "xfs", "ntfs".
                                type: string
                              nodePublishSecretRef:
                                description: nodePublishSecretRef is a reference to
                                  the secret object containing sensitive information
                                  to pass to the CSI driver to complete the CSI NodePublishVolume
                                  and NodeUnpublishVolume calls. This field is optional,
                                  and may be empty if no secret is required. If the
                                  secret object contains more than one secret, all
                                  secrets are passed.
                                properties:
                                  name:
                                    description: name is unique within a namespace
                                      to reference a secret resource.
                                    type: string
                                  namespace:
                                    description: namespace defines the space within
                                      which the secret name must be unique.
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                              nodeStageSecretRef:
                                description: nodeStageSecretRef is a reference to
                                  the secret object containing sensitive information
                                  to pass to the CSI driver to complete the CSI NodeStageVolume
                                  and NodeStageVolume and NodeUnstageVolume calls.
                                  This field is optional, and may be empty if no secret
                                  is required. If the secret object contains more
                                  than one secret, all secrets are passed.
                                properties:
                                  name:
                                    description: name is unique within a namespace
                                      to reference a secret resource.
                                    type: string
                                  namespace:
                                    description: namespace defines the space within
                                      which the secret name must be unique.
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                              readOnly:
                                description: readOnly value to pass to ControllerPublishVolumeRequest.
                                  Defaults to false (read/write).
                                type: boolean
                              volumeAttributes:
                                additionalProperties:
                                  type: string
                                description: volumeAttributes of the volume to publish.
                                type: object
                              volumeHandle:
                                description: volumeHandle is the unique volume name
                                  returned by the CSI volume plugin’s CreateVolume
                                  to refer to the volume on all subsequent calls.
                                  Required.
                                type: string
                            required:
                            - driver
                            - volumeHandle
                            type: object
                          fc:
                            description: fc represents a Fibre Channel resource that
                              is attached to a kubelet's host machine and then exposed
                              to the pod.
                            properties:
                              fsType:
                                description: 'fsType is the filesystem type to mount.
                                  Must be a filesystem type supported by the host
                                  operating system. Ex. "ext4", "xfs", "ntfs". Implicitly
                                  inferred to be "ext4" if unspecified. TODO: how
                                  do we prevent errors in the filesystem from compromising
                                  the machine'
                                type: string
                              lun:
                                description: 'lun is Optional: FC target lun number'
                                format: int32
                                type: integer
                              readOnly:
                                description: 'readOnly is Optional: Defaults to false
                                  (read/write). ReadOnly here will force the ReadOnly
                                  setting in VolumeMounts.'
                                type: boolean
                              targetWWNs:
                                description: 'targetWWNs is Optional: FC target worldwide
                                  names (WWNs)'
                                items:
                                  type: string
                                type: array
                              wwids:
                                description: 'wwids Optional: FC volume world wide
                                  identifiers (wwids) Either wwids or combination
                                  of targetWWNs and lun must be set, but not both
                                  simultaneously.'
                                items:
                                  type: string
                                type: array
                            type: object
                          flexVolume:
                            description: flexVolume represents a generic volume resource
                              that is provisioned/attached using an exec based plugin.
                            properties:
                              driver:
                                description: driver is the name of the driver to use
                                  for this volume.
                                type: string
                              fsType:
                                description: fsType is the Filesystem type to mount.
                                  Must be a filesystem type supported by the host
                                  operating system. Ex. "ext4", "xfs", "ntfs". The
                                  default filesystem depends on FlexVolume script.
                                type: string
                              options:
                                additionalProperties:
                                  type: string
                                description: 'options is Optional: this field holds
                                  extra command options if any.'
                                type: object
                              readOnly:
                                description: 'readOnly is Optional: defaults to false
                                  (read/write). ReadOnly here will force the ReadOnly
                                  setting in VolumeMounts.'
                                type: boolean
                              secretRef:
                                description: 'secretRef is Optional: SecretRef is
                                  reference to the secret object containing sensitive
                                  information to pass to the plugin scripts. This
                                  may be empty if no secret object is specified. If
                                  the secret object contains more than one secret,
                                  all secrets are passed to the plugin scripts.'
                                properties:
                                  name:
                                    description: name is unique within a namespace
                                      to reference a secret resource.
                                    type: string
                                  namespace:
                                    description: namespace defines the space within
                                      which the secret name must be unique.
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                            required:
                            - driver
                            type: object
                          flocker:
                            description: flocker represents a Flocker volume attached
                              to a kubelet's host machine and exposed to the pod for
                              its usage. This depends on the Flocker control service
                              being running
                            properties:
                              datasetName:
                                description: datasetName is Name of the dataset stored
                                  as metadata -> name on the dataset for Flocker should
                                  be considered as deprecated
                                type: string
                              datasetUUID:
                                description: datasetUUID is the UUID of the dataset.
                                  This is unique identifier of a Flocker dataset
                                type: string
                            type: object
                          gcePersistentDisk:
                            description: 'gcePersistentDisk represents a GCE Disk
                              resource that is attached to a kubelet''s host machine
                              and then exposed to the pod. Provisioned by an admin.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                            properties:
                              fsType:
                                description: 'fsType is filesystem type of the volume
                                  that you want to mount. Tip: Ensure that the filesystem
                                  type is supported by the host operating system.
                                  Examples: "ext4", "xfs", "ntfs". Implicitly inferred
                                  to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                  TODO: how do we prevent errors in the filesystem
                                  from compromising the machine'
                                type: string
                              partition:
                                description: 'partition is the partition in the volume
                                  that you want to mount. If omitted, the default
                                  is to mount by volume name. Examples: For volume
                                  /dev/sda1, you specify the partition as "1". Similarly,
                                  the volume partition for /dev/sda is "0" (or you
                                  can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                format: int32
                                type: integer
                              pdName:
                                description: 'pdName is unique name of the PD resource
                                  in GCE. Used to identify the disk in GCE. More info:
                                  https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                type: string
                              readOnly:
                                description: 'readOnly here will force the ReadOnly
                                  setting in VolumeMounts. Defaults to false. More
                                  info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                type: boolean
                            required:
                            - pdName
                            type: object
                          glusterfs:
                            description: 'glusterfs represents a Glusterfs volume
                              that is attached to a host and exposed to the pod. Provisioned
                              by an admin. More info: https://examples.k8s.io/volumes/glusterfs/README.md'
                            properties:
                              endpoints:
                                description: 'endpoints is the endpoint name that
                                  details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                type: string
                              endpointsNamespace:
                                description: 'endpointsNamespace is the namespace
                                  that contains Glusterfs endpoint. If this field
                                  is empty, the EndpointNamespace defaults to the
                                  same namespace as the bound PVC. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                type: string
                              path:
                                description: 'path is the Glusterfs volume path. More
                                  info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                type: string
                              readOnly:
                                description: 'readOnly here will force the Glusterfs
                                  volume to be mounted with read-only permissions.
                                  Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                type: boolean
                            required:
                            - endpoints
                            - path
                            type: object
                          hostPath:
                            description: 'hostPath represents a directory on the host.
                              Provisioned by a developer or tester. This is useful
                              for single-node development and testing only! On-host
                              storage is not supported in any way and WILL NOT WORK
                              in a multi-node cluster. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                            properties:
                              path:
                                description: 'path of the directory on the host. If
                                  the path is a symlink, it will follow the link to
                                  the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                                type: string
                              type:
                                description: 'type for HostPath Volume Defaults to
                                  "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                                type: string
                            required:
                            - path
                            type: object
                          iscsi:
                            description: iscsi represents an ISCSI Disk resource that
                              is attached to a kubelet's host machine and then exposed
                              to the pod. Provisioned by an admin.
                            properties:
                              chapAuthDiscovery:
                                description: chapAuthDiscovery defines whether support
                                  iSCSI Discovery CHAP authentication
                                type: boolean
                              chapAuthSession:
                                description: chapAuthSession defines whether support
                                  iSCSI Session CHAP authentication
                                type: boolean
                              fsType:
                                description: 'fsType is the filesystem type of the
                                  volume that you want to mount. Tip: Ensure that
                                  the filesystem type is supported by the host operating
                                  system. Examples: "ext4", "xfs", "ntfs". Implicitly
                                  inferred to be "ext4" if unspecified. More info:
                                  https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                                  TODO: how do we prevent errors in the filesystem
                                  from compromising the machine'
                                type: string
                              initiatorName:
                                description: initiatorName is the custom iSCSI Initiator
                                  Name. If initiatorName is specified with iscsiInterface
                                  simultaneously, new iSCSI interface <target portal>:<volume
                                  name> will be created for the connection.
                                type: string
                              iqn:
                                description: iqn is Target iSCSI Qualified Name.
                                type: string
                              iscsiInterface:
                                description: iscsiInterface is the interface Name
                                  that uses an iSCSI transport. Defaults to 'default'
                                  (tcp).
                                type: string
                              lun:
                                description: lun is iSCSI Target Lun number.
                                format: int32
                                type: integer
                              portals:
                                description: portals is the iSCSI Target Portal List.
                                  The Portal is either an IP or ip_addr:port if the
                                  port is other than default (typically TCP ports
                                  860 and 3260).
                                items:
                                  type: string
                                type: array
                              readOnly:
                                description: readOnly here will force the ReadOnly
                                  setting in VolumeMounts. Defaults to false.
                                type: boolean
                              secretRef:
                                description: secretRef is the CHAP Secret for iSCSI
                                  target and initiator authentication
                                properties:
                                  name:
                                    description: name is unique within a namespace
                                      to reference a secret resource.
                                    type: string
                                  namespace:
                                    description: namespace defines the space within
                                      which the secret name must be unique.
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                              targetPortal:
                                description: targetPortal is iSCSI Target Portal.
                                  The Portal is either an IP or ip_addr:port if the
                                  port is other than default (typically TCP ports
                                  860 and 3260).
                                type: string
                            required:
                            - iqn
                            - lun
                            - targetPortal
                            type: object
                          local:
                            description: local represents directly-attached storage
                              with node affinity
                            properties:
                              fsType:
                                description: fsType is the filesystem type to mount.
                                  It applies only when the Path is a block device.
                                  Must be a filesystem type supported by the host
                                  operating system. Ex. "ext4", "xfs", "ntfs". The
                                  default value is to auto-select a filesystem if
                                  unspecified.
                                type: string
                              path:
                                description: path of the full path to the volume on
                                  the node. It can be either a directory or block
                                  device (disk, partition, ...).
                                type: string
                            required:
                            - path
                            type: object
                          mountOptions:
                            description: 'mountOptions is the list of mount options,
                              e.g. ["ro", "soft"]. Not validated - mount will simply
                              fail if one is invalid. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#mount-options'
                            items:
                              type: string
                            type: array
                          nfs:
                            description: 'nfs represents an NFS mount on the host.
                              Provisioned by an admin. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                            properties:
                              path:
                                description: 'path that is exported by the NFS server.
                                  More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                type: string
                              readOnly:
                                description: 'readOnly here will force the NFS export
                                  to be mounted with read-only permissions. Defaults
                                  to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                type: boolean
                              server:
                                description: 'server is the hostname or IP address
                                  of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                type: string
                            required:
                            - path
                            - server
                            type: object
                          nodeAffinity:
                            description: nodeAffinity defines constraints that limit
                              what nodes this volume can be accessed from. This field
                              influences the scheduling of pods that use this volume.
                            properties:
                              required:
                                description: required specifies hard node constraints
                                  that must be met.
                                properties:
                                  nodeSelectorTerms:
                                    description: Required. A list of node selector
                                      terms. The terms are ORed.
                                    items:
                                      description: A null or empty node selector term
                                        matches no objects. The requirements of them
                                        are ANDed. The TopologySelectorTerm type implements
                                        a subset of the NodeSelectorTerm.
                                      properties:
                                        matchExpressions:
                                          description: A list of node selector requirements
                                            by node's labels.
                                          items:
                                            description: A node selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: The label key that the
                                                  selector applies to.
                                                type: string
                                              operator:
                                                description: Represents a key's relationship
                                                  to a set of values. Valid operators
                                                  are In, NotIn, Exists, DoesNotExist.
                                                  Gt, and Lt.
                                                type: string
                                              values:
                                                description: An array of string values.
                                                  If the operator is In or NotIn,
                                                  the values array must be non-empty.
                                                  If the operator is Exists or DoesNotExist,
                                                  the values array must be empty.
                                                  If the operator is Gt or Lt, the
                                                  values array must have a single
                                                  element, which will be interpreted
                                                  as an integer. This array is replaced
                                                  during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchFields:
                                          description: A list of node selector requirements
                                            by node's fields.
                                          items:
                                            description: A node selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: The label key that the
                                                  selector applies to.
                                                type: string
                                              operator:
                                                description: Represents a key's relationship
                                                  to a set of values. Valid operators
                                                  are In, NotIn, Exists, DoesNotExist.
                                                  Gt, and Lt.
                                                type: string
                                              values:
                                                description: An array of string values.
                                                  If the operator is In or NotIn,
                                                  the values array must be non-empty.
                                                  If the operator is Exists or DoesNotExist,
                                                  the values array must be empty.
                                                  If the operator is Gt or Lt, the
                                                  values array must have a single
                                                  element, which will be interpreted
                                                  as an integer. This array is replaced
                                                  during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    type: array
                                required:
                                - nodeSelectorTerms
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          persistentVolumeReclaimPolicy:
                            description: 'persistentVolumeReclaimPolicy defines what
                              happens to a persistent volume when released from its
                              claim. Valid options are Retain (default for manually
                              created PersistentVolumes), Delete (default for dynamically
                              provisioned PersistentVolumes), and Recycle (deprecated).
                              Recycle must be supported by the volume plugin underlying
                              this PersistentVolume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#reclaiming'
                            type: string
                          photonPersistentDisk:
                            description: photonPersistentDisk represents a PhotonController
                              persistent disk attached and mounted on kubelets host
                              machine
                            properties:
                              fsType:
                                description: fsType is the filesystem type to mount.
                                  Must be a filesystem type supported by the host
                                  operating system. Ex. "ext4", "xfs", "ntfs". Implicitly
                                  inferred to be "ext4" if unspecified.
                                type: string
                              pdID:
                                description: pdID is the ID that identifies Photon
                                  Controller persistent disk
                                type: string
                            required:
                            - pdID
                            type: object
                          portworxVolume:
                            description: portworxVolume represents a portworx volume
                              attached and mounted on kubelets host machine
                            properties:
                              fsType:
                                description: fSType represents the filesystem type
                                  to mount Must be a filesystem type supported by
                                  the host operating system. Ex. "ext4", "xfs". Implicitly
                                  inferred to be "ext4" if unspecified.
                                type: string
                              readOnly:
                                description: readOnly defaults to false (read/write).
                                  ReadOnly here will force the ReadOnly setting in
                                  VolumeMounts.
                                type: boolean
                              volumeID:
                                description: volumeID uniquely identifies a Portworx
                                  volume
                                type: string
                            required:
                            - volumeID
                            type: object
                          quobyte:
                            description: quobyte represents a Quobyte mount on the
                              host that shares a pod's lifetime
                            properties:
                              group:
                                description: group to map volume access to Default
                                  is no group
                                type: string
                              readOnly:
                                description: readOnly here will force the Quobyte
                                  volume to be mounted with read-only permissions.
                                  Defaults to false.
                                type: boolean
                              registry:
                                description: registry represents a single or multiple
                                  Quobyte Registry services specified as a string
                                  as host:port pair (multiple entries are separated
                                  with commas) which acts as the central registry
                                  for volumes
                                type: string
                              tenant:
                                description: tenant owning the given Quobyte volume
                                  in the Backend Used with dynamically provisioned
                                  Quobyte volumes, value is set by the plugin
                                type: string
                              user:
                                description: user to map volume access to Defaults
                                  to serivceaccount user
                                type: string
                              volume:
                                description: volume is a string that references an
                                  already created Quobyte volume by name.
                                type: string
                            required:
                            - registry
                            - volume
                            type: object
                          rbd:
                            description: 'rbd represents a Rados Block Device mount
                              on the host that shares a pod''s lifetime. More info:
                              https://examples.k8s.io/volumes/rbd/README.md'
                            properties:
                              fsType:
                                description: 'fsType is the filesystem type of the
                                  volume that you want to mount. Tip: Ensure that
                                  the filesystem type is supported by the host operating
                                  system. Examples: "ext4", "xfs", "ntfs". Implicitly
                                  inferred to be "ext4" if unspecified. More info:
                                  https://kubernetes.io/docs/concepts/storage/volumes#rbd
                                  TODO: how do we prevent errors in the filesystem
                                  from compromising the machine'
                                type: string
                              image:
                                description: 'image is the rados image name. More
                                  info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                type: string
                              keyring:
                                description: 'keyring is the path to key ring for
                                  RBDUser. Default is /etc/ceph/keyring. More info:
                                  https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                type: string
                              monitors:
                                description: 'monitors is a collection of Ceph monitors.
                                  More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                items:
                                  type: string
                                type: array
                              pool:
                                description: 'pool is the rados pool name. Default
                                  is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                type: string
                              readOnly:
                                description: 'readOnly here will force the ReadOnly
                                  setting in VolumeMounts. Defaults to false. More
                                  info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                type: boolean
                              secretRef:
                                description: 'secretRef is name of the authentication
                                  secret for RBDUser. If provided overrides keyring.
                                  Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                properties:
                                  name:
                                    description: name is unique within a namespace
                                      to reference a secret resource.
                                    type: string
                                  namespace:
                                    description: namespace defines the space within
                                      which the secret name must be unique.
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                              user:
                                description: 'user is the rados user name. Default
                                  is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                type: string
                            required:
                            - image
                            - monitors
                            type: object
                          scaleIO:
                            description: scaleIO represents a ScaleIO persistent volume
                              attached and mounted on Kubernetes nodes.
                            properties:
                              fsType:
                                description: fsType is the filesystem type to mount.
                                  Must be a filesystem type supported by the host
                                  operating system. Ex. "ext4", "xfs", "ntfs". Default
                                  is "xfs"
                                type: string
                              gateway:
                                description: gateway is the host address of the ScaleIO
                                  API Gateway.
                                type: string
                              protectionDomain:
                                description: protectionDomain is the name of the ScaleIO
                                  Protection Domain for the configured storage.
                                type: string
                              readOnly:
                                description: readOnly defaults to false (read/write).
                                  ReadOnly here will force the ReadOnly setting in
                                  VolumeMounts.
                                type: boolean
                              secretRef:
                                description: secretRef references to the secret for
                                  ScaleIO user and other sensitive information. If
                                  this is not provided, Login operation will fail.
                                properties:
                                  name:
                                    description: name is unique within a namespace
                                      to reference a secret resource.
                                    type: string
                                  namespace:
                                    description: namespace defines the space within
                                      which the secret name must be unique.
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                              sslEnabled:
                                description: sslEnabled is the flag to enable/disable
                                  SSL communication with Gateway, default false
                                type: boolean
                              storageMode:
                                description: storageMode indicates whether the storage
                                  for a volume should be ThickProvisioned or ThinProvisioned.
                                  Default is ThinProvisioned.
                                type: string
                              storagePool:
                                description: storagePool is the ScaleIO Storage Pool
                                  associated with the protection domain.
                                type: string
                              system:
                                description: system is the name of the storage system
                                  as configured in ScaleIO.
                                type: string
                              volumeName:
                                description: volumeName is the name of a volume already
                                  created in the ScaleIO system that is associated
                                  with this volume source.
                                type: string
                            required:
                            - gateway
                            - secretRef
                            - system
                            type: object
                          storageClassName:
                            description: storageClassName is the name of StorageClass
                              to which this persistent volume belongs. Empty value
                              means that this volume does not belong to any StorageClass.
                            type: string
                          storageos:
                            description: 'storageOS represents a StorageOS volume
                              that is attached to the kubelet''s host machine and
                              mounted into the pod More info: https://examples.k8s.io/volumes/storageos/README.md'
                            properties:
                              fsType:
                                description: fsType is the filesystem type to mount.
                                  Must be a filesystem type supported by the host
                                  operating system. Ex. "ext4", "xfs", "ntfs". Implicitly
                                  inferred to be "ext4" if unspecified.
                                type: string
                              readOnly:
                                description: readOnly defaults to false (read/write).
                                  ReadOnly here will force the ReadOnly setting in
                                  VolumeMounts.
                                type: boolean
                              secretRef:
                                description: secretRef specifies the secret to use
                                  for obtaining the StorageOS API credentials.  If
                                  not specified, default values will be attempted.
                                properties:
                                  apiVersion:
                                    description: API version of the referent.
                                    type: string
                                  fieldPath:
                                    description: 'If referring to a piece of an object
                                      instead of an entire object, this string should
                                      contain a valid JSON/Go field access statement,
                                      such as desiredState.manifest.containers[2].
                                      For example, if the object reference is to a
                                      container within a pod, this would take on a
                                      value like: "spec.containers{name}" (where "name"
                                      refers to the name of the container that triggered
                                      the event) or if no container name is specified
                                      "spec.containers[2]" (container with index 2
                                      in this pod). This syntax is chosen only to
                                      have some well-defined way of referencing a
                                      part of an object. TODO: this design is not
                                      final and this field is subject to change in
                                      the future.'
                                    type: string
                                  kind:
                                    description: 'Kind of the referent. More info:
                                      https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                  namespace:
                                    description: 'Namespace of the referent. More
                                      info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                    type: string
                                  resourceVersion:
                                    description: 'Specific resourceVersion to which
                                      this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                    type: string
                                  uid:
                                    description: 'UID of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                              volumeName:
                                description: volumeName is the human-readable name
                                  of the StorageOS volume.  Volume names are only
                                  unique within a namespace.
                                type: string
                              volumeNamespace:
                                description: volumeNamespace specifies the scope of
                                  the volume within StorageOS.  If no namespace is
                                  specified then the Pod's namespace will be used.  This
                                  allows the Kubernetes name scoping to be mirrored
                                  within StorageOS for tighter integration. Set VolumeName
                                  to any name to override the default behaviour. Set
                                  to "default" if you are not using namespaces within
                                  StorageOS. Namespaces that do not pre-exist within
                                  StorageOS will be created.
                                type: string
                            type: object
                          volumeMode:
                            description: volumeMode defines if a volume is intended
                              to be used with a formatted filesystem or to remain
                              in raw block state. Value of Filesystem is implied when
                              not included in spec.
                            type: string
                          vsphereVolume:
                            description: vsphereVolume represents a vSphere volume
                              attached and mounted on kubelets host machine
                            properties:
                              fsType:
                                description: fsType is filesystem type to mount. Must
                                  be a filesystem type supported by the host operating
                                  system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                                  to be "ext4" if unspecified.
                                type: string
                              storagePolicyID:
                                description: storagePolicyID is the storage Policy
                                  Based Management (SPBM) profile ID associated with
                                  the StoragePolicyName.
                                type: string
                              storagePolicyName:
                                description: storagePolicyName is the storage Policy
                                  Based Management (SPBM) profile name.
                                type: string
                              volumePath:
                                description: volumePath is the path that identifies
                                  vSphere volume vmdk
                                type: string
                            required:
                            - volumePath
                            type: object
                        type: object
                      spillLowerRate:
                        description: low watermark of spilling memory
                        type: string
                      spillUpperRate:
                        description: high watermark of triggering spiling
                        type: string
                    type: object
                  streamThreshold:
                    description: memory threshold of streams (percentage of total
                      memory)
                    format: int64
                    type: integer
                  syncCRDs:
                    description: synchronize CRDs when persisting objects
                    type: boolean
                type: object
              env:
                description: environment configuration
                items:
                  description: EnvVar represents an environment variable present in
                    a Container.
                  properties:
                    name:
                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                      type: string
                    value:
                      description: 'Variable references $(VAR_NAME) are expanded using
                        the previously defined environment variables in the container
                        and any service environment variables. If a variable cannot
                        be resolved, the reference in the input string will be unchanged.
                        Double $$ are reduced to a single $, which allows for escaping
                        the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the
                        string literal "$(VAR_NAME)". Escaped references will never
                        be expanded, regardless of whether the variable exists or
                        not. Defaults to "".'
                      type: string
                    valueFrom:
                      description: Source for the environment variable's value. Cannot
                        be used if value is not empty.
                      properties:
                        configMapKeyRef:
                          description: Selects a key of a ConfigMap.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        fieldRef:
                          description: 'Selects a field of the pod: supports metadata.name,
                            metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                            spec.nodeName, spec.serviceAccountName, status.hostIP,
                            status.podIP, status.podIPs.'
                          properties:
                            apiVersion:
                              description: Version of the schema the FieldPath is
                                written in terms of, defaults to "v1".
                              type: string
                            fieldPath:
                              description: Path of the field to select in the specified
                                API version.
                              type: string
                          required:
                          - fieldPath
                          type: object
                          x-kubernetes-map-type: atomic
                        resourceFieldRef:
                          description: 'Selects a resource of the container: only
                            resources limits and requests (limits.cpu, limits.memory,
                            limits.ephemeral-storage, requests.cpu, requests.memory
                            and requests.ephemeral-storage) are currently supported.'
                          properties:
                            containerName:
                              description: 'Container name: required for volumes,
                                optional for env vars'
                              type: string
                            divisor:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Specifies the output format of the exposed
                                resources, defaults to "1"
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            resource:
                              description: 'Required: resource to select'
                              type: string
                          required:
                          - resource
                          type: object
                          x-kubernetes-map-type: atomic
                        secretKeyRef:
                          description: Selects a key of a secret in the pod's namespace
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                  required:
                  - name
                  type: object
                type: array
              etcd:
                description: Etcd describe the etcd instances
                properties:
                  instances:
                    description: Etcd instances
                    type: integer
                type: object
              image:
                description: represent the vineyardd's image
                type: string
              imagePullPolicy:
                description: the policy about pulling image
                type: string
              metric:
                description: metric configuration
                properties:
                  image:
                    description: represent the metric's image
                    type: string
                  imagePullPolicy:
                    description: the policy about pulling image
                    type: string
                type: object
              replicas:
                description: the replicas of vineyardd
                type: integer
              service:
                description: vineyardd's service
                properties:
                  port:
                    description: service port
                    type: integer
                  type:
                    description: service type
                    type: string
                type: object
              version:
                description: the version of vineyardd
                type: string
            required:
            - image
            - replicas
            - version
            type: object
          status:
            description: VineyarddStatus defines the observed state of Vineyardd
            properties:
              conditions:
                description: Represents the vineyardd deployment's current state.
                items:
                  description: DeploymentCondition describes the state of a deployment
                    at a certain point.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    lastUpdateTime:
                      description: The last time this condition was updated.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of deployment condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              required:
                description: Total replicas of required vineyardd.
                format: int32
                type: integer
              running:
                description: Total replicas of running vineyardd.
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
