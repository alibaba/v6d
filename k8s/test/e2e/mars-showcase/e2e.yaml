# Copyright 2020-2023 Alibaba Group Holding Limited.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

setup:
  env: kind
  kubeconfig: /tmp/e2e-k8s.config
  steps:
    - name: run prepare-data job
      command: |
        kubectl create ns vineyard-job
        kubectl apply -f k8s/showcase/vineyard-mars-pytorch/prepare-data/resources
      wait:
        - namespace: vineyard-job
          resource: job/prepare-data
          for: condition=complete
    - name: run process-data job
      command: |
        kubectl apply -f k8s/showcase/vineyard-mars-pytorch/process-data/resources
      wait:
        - namespace: vineyard-job
          resource: job/process-data
          for: condition=complete
    - name: run train-data job
      command: |
        kubectl apply -f k8s/showcase/vineyard-mars-pytorch/train-data/resources
  timeout: 30m

cleanup:
  # always never success failure
  on: always

verify:
  # verify with retry strategy
  retry:
    # max retry count
    count: 20
    # the interval between two attempts, e.g. 10s, 1m.
    interval: 20s
  cases:
    - query: |
        export nodeName=$(kubectl get localobjects -o=jsonpath='{.items[?(@.spec.instance_id==0)].spec.hostname}' -A | \
          cut -d ' ' -f1)
        export masterPod=$(kubectl get po -l app=train-data -o=jsonpath='{.items[?(@.spec.nodeName=="'$nodeName'")].metadata.name}' \
          -n vineyard-job)
        kubectl logs $masterPod -n vineyard-job | \
          tail -n 1 | \
          yq e '{"result": .}' - | \
          yq e 'to_entries' -
      expected: ../verify/serialize.yaml
