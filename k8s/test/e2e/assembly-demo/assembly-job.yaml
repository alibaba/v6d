# Copyright 2020-2023 Alibaba Group Holding Limited.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# replace the $job with your job name
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ (datasource "config").$job.jobName }}
  namespace: vineyard-job
spec:
  selector:
    matchLabels:
      app: {{ (datasource "config").$job.jobName }}
  replicas: 1
  template:
    metadata:
      annotations:
        scheduling.k8s.v6d.io/required: {{ (datasource "config").$job.required.jobName }}
      labels:
        app: {{ (datasource "config").$job.jobName }}
        {{- if (datasource "config").$job.assembly.enabled }}
        assembly.v6d.io/enabled: "{{ (datasource "config").$job.assembly.enabled }}"
        {{- end}}
        {{- if (datasource "config").$job.assembly.type }}
        assembly.v6d.io/type: "{{ (datasource "config").$job.assembly.type }}"
        {{- end}}
        # this label represents the vineyardd's name that need to be used
        scheduling.k8s.v6d.io/vineyardd-namespace: vineyard-system
        scheduling.k8s.v6d.io/vineyardd: vineyardd-sample
        scheduling.k8s.v6d.io/job: {{ (datasource "config").$job.jobName }}
    spec:
      {{- if (datasource "config").$job.schedulerName }}
      schedulerName: {{ (datasource "config").$job.schedulerName }}
      {{- end }}
      {{- if (datasource "config").$job.nodeName }}
      nodeName: {{ (datasource "config").$job.nodeName }}
      {{- end }}
      containers:
        - name: {{ (datasource "config").$job.jobName }}
          image: localhost:5001/{{ (datasource "config").$job.jobName }}
          env:
            - name: JOB_NAME
              value: {{ (datasource "config").$job.jobName }}
            - name: METADATA_ID
              # tricky step: the value should be placed before running
              value: METADATA_ID_VALUE
            {{- if (datasource "config").$job.required.dataName }}
            - name: REQUIRED_JOB_NAME
              value: {{ (datasource "config").$job.required.dataName }}
            {{- end }}
          {{- if (datasource "config").$job.required.dataName }}
          envFrom:
          - configMapRef:
              name: {{ (datasource "config").$job.required.dataName }}
          {{- end }}
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /var/run
              name: vineyard-sock
      volumes:
        - name: vineyard-sock
          hostPath:
            path: /var/run/vineyard-kubernetes/vineyard-system/vineyardd-sample
