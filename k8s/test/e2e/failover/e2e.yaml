# Copyright 2020-2022 Alibaba Group Holding Limited.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

setup:
  env: kind
  file: ../kind.yaml
  steps:
    - name: setup the backup path
      command: worker=($(docker ps | grep kind-worker | awk -F ' ' '{print $1}')); for c in ${worker[@]}; do docker exec $c mkdir -p /var/vineyard/dump; done
    - name: install cert-manager
      command: |
        kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.9.1/cert-manager.yaml
      wait:
        - namespace: cert-manager
          resource: pod
          for: condition=Ready
    - name: install scheduler-plugin and operator
      command: |
        kind load docker-image vineyardcloudnative/vineyard-operator:latest
        make -C k8s deploy
      wait:
        - namespace: vineyard-system
          resource: deployment/vineyard-controller-manager
          for: condition=Available
    - name: install vineyardd
      command: |
        sed 's/replicas: 2/replicas: 3/' k8s/test/e2e/vineyardd.yaml | kubectl apply -f -
      wait:
        - namespace: vineyard-system
          resource: vineyardd/vineyardd-sample
          for: condition=Available
    - name: install job1
      command: |
        kubectl create namespace vineyard-job
        kubectl apply -f k8s/test/e2e/workflow-job1.yaml
      wait:
        - namespace: vineyard-job
          resource: deployment/v6d-workflow-demo-job1-deployment
          for: condition=Available
    - name: install backup
      command: |
        kubectl create ns backup
        kubectl apply -f k8s/test/e2e/backup.yaml
        while ! [ $(kubectl get backup backup-sample -n backup -o jsonpath='{.status.state}') = 'Succeed'  ]; \
        do \
          sleep 0.1; \
        done
    - name: get nodename and object_id, then simulate vineyard node fail
      command: |
        export nodename=$(kubectl get pod -l app=v6d-workflow-demo-job1 -nvineyard-job -o=custom-columns=NODE:.spec.nodeName | awk 'NR != 1' | tail -n 1)    
        echo $nodename
        export signature=$(kubectl get localobjects -A | grep $nodename | grep vineyard::Tensor | awk -F ' ' '{print $4}')
        echo $signature
        export object_id=$(kubectl get globalobjects -A -o=jsonpath='{.items[?(@.spec.members[0]=="'$signature'")].metadata.name}')
        echo $object_id
        kubectl delete pod $(kubectl get pod -l app.kubernetes.io/name=vineyardd-sample -n vineyard-system -o=jsonpath='{.items[?(@.spec.nodeName=="'$nodename'")].metadata.name}') -n vineyard-system
      wait:
        - namespace: vineyard-system
          resource: vineyardd/vineyardd-sample
          for: condition=Available
    - name: install recover
      command: |
        kubectl apply -f k8s/test/e2e/recover.yaml
        while ! [ $(kubectl get recover recover-sample -n backup -o jsonpath='{.status.state}') = 'Succeed'  ]; \
        do \
          sleep 0.1; \
        done
    - name: install get-object job
      command: |
        export newobject_id=$(kubectl get recover -A | grep $object_id | sed 's/,/\n/g'| grep \"$object_id\" | sed 's/:/\n/g' | tail -n 1 | sed 's/}/\n/g' | head -n 1 | sed 's/"//g')
        sed 's/${nodeName}/'$nodename'/;s/${OBJECT_ID}/'$newobject_id'/' k8s/test/e2e/get-object.yaml | kubectl apply -f -
      wait:
        - namespace: vineyard-job
          resource: deployment/get-object
          for: condition=Available
  timeout: 60m

cleanup:
  # always never success failure
  on: always

verify:
  # verify with retry strategy
  retry:
    # max retry count
    count: 10
    # the interval between two attempts, e.g. 10s, 1m.
    interval: 10s
  cases:
    - query: 'kubectl get pod -l app=get-object -n vineyard-job -oname | awk -F ''/'' ''{print $2}'' | head -n 1 | xargs kubectl logs -n vineyard-job | yq e ''{"sum": .}'' - | yq e ''to_entries'' -'
      expected: ../verify/values.yaml
